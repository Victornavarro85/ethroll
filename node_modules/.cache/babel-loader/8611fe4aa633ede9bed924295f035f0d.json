{"ast":null,"code":"var _jsxFileName = \"/Users/I514234/Documents/etheroll/src/components/CoinFlip.jsx\";\nimport React, { Fragment } from 'react';\nimport { arrayOf, func, number, shape, string } from 'prop-types';\nimport onRollClick from './BaseGame';\nimport BetSize from './BetSize';\nimport FlipButton from './FlipButton';\nimport CoinFlipRecap from './CoinFlipRecap';\nimport CoinFlipTransactions from './CoinFlipTransactions';\n\nvar CoinFlip = function CoinFlip(props) {\n  var accountAddress = props.accountAddress,\n      betSize = props.betSize,\n      contract = props.contract,\n      filterTransactions = props.filterTransactions,\n      filteredTransactions = props.filteredTransactions,\n      minBet = props.minBet,\n      maxBet = props.maxBet,\n      network = props.network,\n      updateState = props.updateState;\n  var rollUnder = 51;\n  var onRollClickProps = {\n    accountAddress: accountAddress,\n    rollUnder: rollUnder,\n    contract: contract,\n    betSize: betSize\n  };\n  var rollDisabled = accountAddress === null;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(BetSize, {\n    betSize: betSize,\n    min: minBet,\n    max: maxBet,\n    updateBetSize: updateState('betSize'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(CoinFlipRecap, {\n    betSize: betSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(FlipButton, {\n    isDisabled: rollDisabled,\n    onClick: function onClick() {\n      return onRollClick(onRollClickProps);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(CoinFlipTransactions, {\n    network: network,\n    onClick: function onClick(transactionsFilter) {\n      return filterTransactions(transactionsFilter);\n    },\n    transactions: filteredTransactions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nCoinFlip.propTypes = {\n  accountAddress: string,\n  betSize: number.isRequired,\n  contract: shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number\n  }),\n  filterTransactions: func.isRequired,\n  filteredTransactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number\n  })).isRequired,\n  minBet: number.isRequired,\n  maxBet: number.isRequired,\n  network: number.isRequired,\n  updateState: func.isRequired\n};\nCoinFlip.defaultProps = {\n  accountAddress: null,\n  contract: null\n};\nexport default CoinFlip;","map":{"version":3,"sources":["/Users/I514234/Documents/etheroll/src/components/CoinFlip.jsx"],"names":["React","Fragment","arrayOf","func","number","shape","string","onRollClick","BetSize","FlipButton","CoinFlipRecap","CoinFlipTransactions","CoinFlip","props","accountAddress","betSize","contract","filterTransactions","filteredTransactions","minBet","maxBet","network","updateState","rollUnder","onRollClickProps","rollDisabled","transactionsFilter","propTypes","isRequired","todo","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport {\n  arrayOf, func, number, shape, string,\n} from 'prop-types';\nimport onRollClick from './BaseGame';\nimport BetSize from './BetSize';\nimport FlipButton from './FlipButton';\nimport CoinFlipRecap from './CoinFlipRecap';\nimport CoinFlipTransactions from './CoinFlipTransactions';\n\n\nconst CoinFlip = (props) => {\n  const {\n    accountAddress, betSize, contract,\n    filterTransactions, filteredTransactions, minBet, maxBet, network,\n    updateState,\n  } = props;\n  const rollUnder = 51;\n  const onRollClickProps = {\n    accountAddress, rollUnder, contract, betSize,\n  };\n  const rollDisabled = accountAddress === null;\n  return (\n    <Fragment>\n      <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={updateState('betSize')} />\n      <CoinFlipRecap betSize={betSize} />\n      <FlipButton isDisabled={rollDisabled} onClick={() => onRollClick(onRollClickProps)} />\n      <CoinFlipTransactions\n        network={network}\n        onClick={transactionsFilter => filterTransactions(transactionsFilter)}\n        transactions={filteredTransactions}\n      />\n    </Fragment>\n  );\n};\n\nCoinFlip.propTypes = {\n  accountAddress: string,\n  betSize: number.isRequired,\n  contract: shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  }),\n  filterTransactions: func.isRequired,\n  filteredTransactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n  minBet: number.isRequired,\n  maxBet: number.isRequired,\n  network: number.isRequired,\n  updateState: func.isRequired,\n};\nCoinFlip.defaultProps = {\n  accountAddress: null,\n  contract: null,\n};\n\nexport default CoinFlip;\n"]},"metadata":{},"sourceType":"module"}