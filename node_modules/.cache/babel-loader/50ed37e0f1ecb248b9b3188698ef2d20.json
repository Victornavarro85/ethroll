{"ast":null,"code":"var _jsxFileName = \"/Users/I514234/Documents/etheroll/src/components/Transactions.jsx\";\nimport React from 'react';\nimport { arrayOf, func, number, shape } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\nvar MergedLog = function MergedLog(_ref) {\n  var network = _ref.network,\n      mergedLog = _ref.mergedLog;\n  var logBetEvent = mergedLog.logBetEvent,\n      logResultEvent = mergedLog.logResultEvent;\n  var playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  var valueEth = '?';\n  var diceResult = '?';\n  var sign = '?';\n  var alertClass = 'secondary'; // resolved bet case\n\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = Number(logResultEvent.returnValues.DiceResult);\n    var playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * Math.pow(10, -18)).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row d-inline-flex list-group-item list-group-item-\".concat(alertClass),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-2 d-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, diceResult)), React.createElement(\"div\", {\n    className: \"col-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, valueEth, \"\\xA0 ETH\"), React.createElement(\"div\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, diceResult, \"\\xA0\", sign, \"\\xA0\", playerNumber), React.createElement(\"div\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"merged-log.wallet\",\n    defaultMessage: \"Wallet:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \"\\xA0\", React.createElement(Address, {\n    address: logBetEvent.returnValues.PlayerAddress.toString(),\n    network: network,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"merged-log.transaction\",\n    defaultMessage: \"Transaction:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"\\xA0\", React.createElement(Transaction, {\n    hash: logBetEvent.transactionHash,\n    network: network,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n};\n\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number\n  }).isRequired\n};\n\nvar TransactionsFilterButtons = function TransactionsFilterButtons(_ref2) {\n  var _onClick = _ref2.onClick;\n  return React.createElement(\"nav\", {\n    className: \"nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link active\",\n    onClick: function onClick() {\n      return _onClick('#all-transactions');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"transactions-filter-buttons.all-transactions\",\n    defaultMessage: \"All transactions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link\",\n    onClick: function onClick() {\n      return _onClick('#my-transactions');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"transactions-filter-buttons.my-transactions\",\n    defaultMessage: \"My transactions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n};\n\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired\n};\n\nvar Transactions = function Transactions(_ref3) {\n  var network = _ref3.network,\n      onClick = _ref3.onClick,\n      transactions = _ref3.transactions;\n  var reversedTransactions = transactions.slice().reverse();\n  var transactionsElems = reversedTransactions.map(function (transaction) {\n    return React.createElement(MergedLog, {\n      key: transaction.logBetEvent.transactionHash,\n      network: network,\n      mergedLog: transaction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    className: \"card transactions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(TransactionsFilterButtons, {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, transactionsElems)));\n};\n\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number\n  })).isRequired\n};\nexport default Transactions;","map":{"version":3,"sources":["/Users/I514234/Documents/etheroll/src/components/Transactions.jsx"],"names":["React","arrayOf","func","number","shape","FormattedMessage","Address","Transaction","MergedLog","network","mergedLog","logBetEvent","logResultEvent","playerNumber","Number","returnValues","PlayerNumber","valueEth","diceResult","sign","alertClass","DiceResult","playerWon","Value","toFixed","PlayerAddress","toString","transactionHash","propTypes","isRequired","todo","TransactionsFilterButtons","onClick","Transactions","transactions","reversedTransactions","slice","reverse","transactionsElems","map","transaction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nconst MergedLog = ({ network, mergedLog }) => {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = Number(logResultEvent.returnValues.DiceResult);\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {playerNumber}\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.wallet\"\n            defaultMessage=\"Wallet:\"\n          />\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.transaction\"\n            defaultMessage=\"Transaction:\"\n          />\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n};\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nconst TransactionsFilterButtons = ({ onClick }) => (\n  <nav className=\"nav\">\n    <button\n      type=\"button\"\n      className=\"btn btn-link active\"\n      onClick={() => onClick('#all-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.all-transactions\"\n        defaultMessage=\"All transactions\"\n      />\n    </button>\n    <button\n      type=\"button\"\n      className=\"btn btn-link\"\n      onClick={() => onClick('#my-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.my-transactions\"\n        defaultMessage=\"My transactions\"\n      />\n    </button>\n  </nav>\n);\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nconst Transactions = ({ network, onClick, transactions }) => {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n};\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}