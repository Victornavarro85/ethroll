{"ast":null,"code":"import _slicedToArray from \"/Users/I514234/Documents/etheroll/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/I514234/Documents/etheroll/src/components/LanguageUpdate.jsx\";\nimport React from 'react';\nimport { arrayOf, func, string } from 'prop-types';\nimport { IntlContext } from '../contexts/IntlContext';\nimport { locales } from '../utils/locales';\n\nvar DropdownItem = function DropdownItem(_ref) {\n  var text = _ref.text,\n      _onClick = _ref.onClick;\n  return React.createElement(\"button\", {\n    className: \"dropdown-item\",\n    type: \"button\",\n    onClick: function onClick() {\n      return _onClick(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, text);\n};\n\nDropdownItem.propTypes = {\n  text: string.isRequired,\n  onClick: func.isRequired\n};\n\nvar DropdownMenu = function DropdownMenu(_ref2) {\n  var items = _ref2.items,\n      onClick = _ref2.onClick;\n  return React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    \"aria-labelledby\": \"navbarDropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, items.map(function (item) {\n    return React.createElement(DropdownItem, {\n      text: item,\n      onClick: onClick,\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }));\n};\n\nDropdownMenu.propTypes = {\n  items: arrayOf(string).isRequired,\n  onClick: func.isRequired\n};\n\nvar LanguageUpdate = function LanguageUpdate() {\n  var _React$useContext = React.useContext(IntlContext),\n      _React$useContext2 = _slicedToArray(_React$useContext, 2),\n      locale = _React$useContext2[0],\n      setLocale = _React$useContext2[1];\n\n  return React.createElement(\"li\", {\n    className: \"nav-item dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"nav-link btn button-link dropdown-toggle\",\n    id: \"navbarDropdown\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-flag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"\\xA0\", locale.toUpperCase()), React.createElement(DropdownMenu, {\n    items: locales,\n    onClick: function onClick(newLocale) {\n      return setLocale(newLocale);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default LanguageUpdate;","map":{"version":3,"sources":["/Users/I514234/Documents/etheroll/src/components/LanguageUpdate.jsx"],"names":["React","arrayOf","func","string","IntlContext","locales","DropdownItem","text","onClick","propTypes","isRequired","DropdownMenu","items","map","item","LanguageUpdate","useContext","locale","setLocale","toUpperCase","newLocale"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAsC,YAAtC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,QAAT,QAASA,OAAT;AAAA,SACnB;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAgD,IAAA,OAAO,EAAE;AAAA,aAAMA,QAAO,CAACD,IAAD,CAAb;AAAA,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+EA,IAA/E,CADmB;AAAA,CAArB;;AAGAD,YAAY,CAACG,SAAb,GAAyB;AACvBF,EAAAA,IAAI,EAAEJ,MAAM,CAACO,UADU;AAEvBF,EAAAA,OAAO,EAAEN,IAAI,CAACQ;AAFS,CAAzB;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUJ,OAAV,SAAUA,OAAV;AAAA,SACnB;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,uBAAgB,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WAAI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,OAAO,EAAEN,OAAnC;AAA4C,MAAA,GAAG,EAAEM,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAd,CADH,CADmB;AAAA,CAArB;;AAKAH,YAAY,CAACF,SAAb,GAAyB;AACvBG,EAAAA,KAAK,EAAEX,OAAO,CAACE,MAAD,CAAP,CAAgBO,UADA;AAEvBF,EAAAA,OAAO,EAAEN,IAAI,CAACQ;AAFS,CAAzB;;AAKA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,0BACCf,KAAK,CAACgB,UAAN,CAAiBZ,WAAjB,CADD;AAAA;AAAA,MACpBa,MADoB;AAAA,MACZC,SADY;;AAG3B,SACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,0CADZ;AAEE,IAAA,EAAE,EAAC,gBAFL;AAGE,mBAAY,UAHd;AAIE,qBAAc,MAJhB;AAKE,qBAAc,OALhB;AAME,IAAA,IAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,UAUGD,MAAM,CAACE,WAAP,EAVH,CADF,EAaE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEd,OADT;AAEE,IAAA,OAAO,EAAE,iBAAAe,SAAS;AAAA,aAAIF,SAAS,CAACE,SAAD,CAAb;AAAA,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAoBD,CAvBD;;AAyBA,eAAeL,cAAf","sourcesContent":["import React from 'react';\nimport { arrayOf, func, string } from 'prop-types';\nimport { IntlContext } from '../contexts/IntlContext';\nimport { locales } from '../utils/locales';\n\nconst DropdownItem = ({ text, onClick }) => (\n  <button className=\"dropdown-item\" type=\"button\" onClick={() => onClick(text)}>{text}</button>\n);\nDropdownItem.propTypes = {\n  text: string.isRequired,\n  onClick: func.isRequired,\n};\n\nconst DropdownMenu = ({ items, onClick }) => (\n  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n    {items.map(item => <DropdownItem text={item} onClick={onClick} key={item} />)}\n  </div>\n);\nDropdownMenu.propTypes = {\n  items: arrayOf(string).isRequired,\n  onClick: func.isRequired,\n};\n\nconst LanguageUpdate = () => {\n  const [locale, setLocale] = React.useContext(IntlContext);\n\n  return (\n    <li className=\"nav-item dropdown\">\n      <button\n        className=\"nav-link btn button-link dropdown-toggle\"\n        id=\"navbarDropdown\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        type=\"button\"\n      >\n        <i className=\"fas fa-flag\" />\n        &nbsp;\n        {locale.toUpperCase()}\n      </button>\n      <DropdownMenu\n        items={locales}\n        onClick={newLocale => setLocale(newLocale)}\n      />\n    </li>\n  );\n};\n\nexport default LanguageUpdate;\n"]},"metadata":{},"sourceType":"module"}