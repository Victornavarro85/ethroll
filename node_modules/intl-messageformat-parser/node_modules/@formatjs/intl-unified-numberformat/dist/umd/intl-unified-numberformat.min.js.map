{"version":3,"file":"intl-unified-numberformat.min.js","sources":["../../../intl-utils/lib/invariant.js","../../../intl-utils/lib/polyfill-utils.js","../../../intl-utils/lib/get-canonical-locales.js","../../../intl-utils/lib/resolve-locale.js","../../../intl-utils/lib/units.js","../../../intl-utils/lib/number-types.js","../../lib/utils.js","../../lib/data.js","../../lib/core.js"],"sourcesContent":["export function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","import aliases from './aliases';\nimport parentLocales from './parentLocales';\nimport { invariant } from './invariant';\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function toObject(arg) {\n    if (arg == null) {\n        throw new TypeError('undefined/null cannot be converted to object');\n    }\n    return Object(arg);\n}\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\nexport function getOption(opts, prop, type, values, fallback) {\n    // const descriptor = Object.getOwnPropertyDescriptor(opts, prop);\n    var value = opts[prop];\n    if (value !== undefined) {\n        if (type !== 'boolean' && type !== 'string') {\n            throw new TypeError('invalid type');\n        }\n        if (type === 'boolean') {\n            value = Boolean(value);\n        }\n        if (type === 'string') {\n            value = String(value);\n        }\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\n            throw new RangeError(value + \" in not within \" + values);\n        }\n        return value;\n    }\n    return fallback;\n}\n/**\n * https://tc39.es/ecma402/#sec-defaultnumberoption\n * @param val\n * @param min\n * @param max\n * @param fallback\n */\nexport function defaultNumberOption(val, min, max, fallback) {\n    if (val !== undefined) {\n        val = Number(val);\n        if (isNaN(val) || val < min || val > max) {\n            throw new RangeError(val + \" is outside of range [\" + min + \", \" + max + \"]\");\n        }\n        return Math.floor(val);\n    }\n    return fallback;\n}\n/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nexport function getNumberOption(options, property, minimum, maximum, fallback) {\n    var val = options[property];\n    return defaultNumberOption(val, minimum, maximum, fallback);\n}\nexport function getAliasesByLang(lang) {\n    return Object.keys(aliases).reduce(function (all, locale) {\n        if (locale.split('-')[0] === lang) {\n            all[locale] = aliases[locale];\n        }\n        return all;\n    }, {});\n}\nexport function getParentLocalesByLang(lang) {\n    return Object.keys(parentLocales).reduce(function (all, locale) {\n        if (locale.split('-')[0] === lang) {\n            all[locale] = parentLocales[locale];\n        }\n        return all;\n    }, {});\n}\nexport function setInternalSlot(map, pl, field, value) {\n    var _a;\n    setMultiInternalSlots(map, pl, (_a = {}, _a[field] = value, _a));\n}\nexport function setMultiInternalSlots(map, pl, props) {\n    if (!map.get(pl)) {\n        map.set(pl, Object.create(null));\n    }\n    var slots = map.get(pl);\n    Object.assign(slots, props);\n}\nexport function getInternalSlot(map, pl, field) {\n    return getMultiInternalSlots(map, pl, field)[field];\n}\nexport function getMultiInternalSlots(map, pl) {\n    var fields = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        fields[_i - 2] = arguments[_i];\n    }\n    var slots = map.get(pl);\n    if (!slots) {\n        throw new TypeError(pl + \" InternalSlot has not been initialized\");\n    }\n    return fields.reduce(function (all, f) {\n        all[f] = slots[f];\n        return all;\n    }, {});\n}\nexport function isLiteralPart(patternPart) {\n    return patternPart.type === 'literal';\n}\nexport function partitionPattern(pattern) {\n    var result = [];\n    var beginIndex = pattern.indexOf('{');\n    var endIndex = 0;\n    var nextIndex = 0;\n    var length = pattern.length;\n    while (beginIndex < pattern.length && beginIndex > -1) {\n        endIndex = pattern.indexOf('}', beginIndex);\n        invariant(endIndex > beginIndex, \"Invalid pattern \" + pattern);\n        if (beginIndex > nextIndex) {\n            result.push({\n                type: 'literal',\n                value: pattern.substring(nextIndex, beginIndex),\n            });\n        }\n        result.push({\n            type: pattern.substring(beginIndex + 1, endIndex),\n            value: undefined,\n        });\n        nextIndex = endIndex + 1;\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    if (nextIndex < length) {\n        result.push({\n            type: 'literal',\n            value: pattern.substring(nextIndex, length),\n        });\n    }\n    return result;\n}\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n * https://tc39.es/proposal-unified-intl-numberformat/section11/numberformat_diff_out.html#sec-setnfdigitoptions\n * @param pl\n * @param opts\n * @param mnfdDefault\n * @param mxfdDefault\n */\nexport function setNumberFormatDigitOptions(internalSlotMap, pl, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = getNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    setInternalSlot(internalSlotMap, pl, 'minimumIntegerDigits', mnid);\n    if (mnsd !== undefined || mxsd !== undefined) {\n        setInternalSlot(internalSlotMap, pl, 'roundingType', 'significantDigits');\n        mnsd = defaultNumberOption(mnsd, 1, 21, 1);\n        mxsd = defaultNumberOption(mxsd, mnsd, 21, 21);\n        setInternalSlot(internalSlotMap, pl, 'minimumSignificantDigits', mnsd);\n        setInternalSlot(internalSlotMap, pl, 'maximumSignificantDigits', mxsd);\n    }\n    else if (mnfd !== undefined || mxfd !== undefined) {\n        setInternalSlot(internalSlotMap, pl, 'roundingType', 'fractionDigits');\n        mnfd = defaultNumberOption(mnfd, 0, 20, mnfdDefault);\n        var mxfdActualDefault = Math.max(mnfd, mxfdDefault);\n        mxfd = defaultNumberOption(mxfd, mnfd, 20, mxfdActualDefault);\n        setInternalSlot(internalSlotMap, pl, 'minimumFractionDigits', mnfd);\n        setInternalSlot(internalSlotMap, pl, 'maximumFractionDigits', mxfd);\n    }\n    else if (notation === 'compact') {\n        setInternalSlot(internalSlotMap, pl, 'roundingType', 'compactRounding');\n    }\n    else {\n        setInternalSlot(internalSlotMap, pl, 'roundingType', 'fractionDigits');\n        setInternalSlot(internalSlotMap, pl, 'minimumFractionDigits', mnfdDefault);\n        setInternalSlot(internalSlotMap, pl, 'maximumFractionDigits', mxfdDefault);\n    }\n}\nexport function objectIs(x, y) {\n    if (Object.is) {\n        return Object.is(x, y);\n    }\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n}\n","/**\n * IE11-safe version of getCanonicalLocales since it's ES2016\n * @param locales locales\n */\nexport function getCanonicalLocales(locales) {\n    // IE11\n    var getCanonicalLocales = Intl.getCanonicalLocales;\n    if (typeof getCanonicalLocales === 'function') {\n        return getCanonicalLocales(locales);\n    }\n    return Intl.NumberFormat.supportedLocalesOf(locales || '');\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { getCanonicalLocales } from './get-canonical-locales';\nimport { invariant } from './invariant';\nimport { toObject, getOption } from './polyfill-utils';\nexport function createResolveLocale(getDefaultLocale) {\n    var lookupMatcher = createLookupMatcher(getDefaultLocale);\n    var bestFitMatcher = createBestFitMatcher(getDefaultLocale);\n    /**\n     * https://tc39.es/ecma402/#sec-resolvelocale\n     */\n    return function resolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData) {\n        var matcher = options.localeMatcher;\n        var r;\n        if (matcher === 'lookup') {\n            r = lookupMatcher(availableLocales, requestedLocales);\n        }\n        else {\n            r = bestFitMatcher(availableLocales, requestedLocales);\n        }\n        var foundLocale = r.locale;\n        var result = { locale: '', dataLocale: foundLocale };\n        var supportedExtension = '-u';\n        for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n            var key = relevantExtensionKeys_1[_i];\n            var foundLocaleData = localeData[foundLocale];\n            invariant(typeof foundLocaleData === 'object' && foundLocaleData !== null, \"locale data \" + key + \" must be an object\");\n            var keyLocaleData = foundLocaleData[key];\n            invariant(Array.isArray(keyLocaleData), \"keyLocaleData for \" + key + \" must be an array\");\n            var value = keyLocaleData[0];\n            invariant(typeof value === 'string' || value === null, 'value must be string or null');\n            var supportedExtensionAddition = '';\n            if (r.extension) {\n                var requestedValue = unicodeExtensionValue(r.extension, key);\n                if (requestedValue !== undefined) {\n                    if (requestedValue !== '') {\n                        if (~keyLocaleData.indexOf(requestedValue)) {\n                            value = requestedValue;\n                            supportedExtensionAddition = \"-\" + key + \"-\" + value;\n                        }\n                    }\n                    else if (~requestedValue.indexOf('true')) {\n                        value = 'true';\n                        supportedExtensionAddition = \"-\" + key;\n                    }\n                }\n            }\n            if (key in options) {\n                var optionsValue = options[key];\n                invariant(typeof optionsValue === 'string' ||\n                    typeof optionsValue === 'undefined' ||\n                    optionsValue === null, 'optionsValue must be String, Undefined or Null');\n                if (~keyLocaleData.indexOf(optionsValue)) {\n                    if (optionsValue !== value) {\n                        value = optionsValue;\n                        supportedExtensionAddition = '';\n                    }\n                }\n            }\n            result[key] = value;\n            supportedExtension += supportedExtensionAddition;\n        }\n        if (supportedExtension.length > 2) {\n            var privateIndex = foundLocale.indexOf('-x-');\n            if (privateIndex === -1) {\n                foundLocale = foundLocale + supportedExtension;\n            }\n            else {\n                var preExtension = foundLocale.slice(0, privateIndex);\n                var postExtension = foundLocale.slice(privateIndex, foundLocale.length);\n                foundLocale = preExtension + supportedExtension + postExtension;\n            }\n            foundLocale = getCanonicalLocales(foundLocale)[0];\n        }\n        result.locale = foundLocale;\n        return result;\n    };\n}\n/**\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\n * @param extension\n * @param key\n */\nfunction unicodeExtensionValue(extension, key) {\n    invariant(key.length === 2, 'key must have 2 elements');\n    var size = extension.length;\n    var searchValue = \"-\" + key + \"-\";\n    var pos = extension.indexOf(searchValue);\n    if (pos !== -1) {\n        var start = pos + 4;\n        var end = start;\n        var k = start;\n        var done = false;\n        while (!done) {\n            var e = extension.indexOf('-', k);\n            var len = void 0;\n            if (e === -1) {\n                len = size - k;\n            }\n            else {\n                len = e - k;\n            }\n            if (len === 2) {\n                done = true;\n            }\n            else if (e === -1) {\n                end = size;\n                done = true;\n            }\n            else {\n                end = e;\n                k = e + 1;\n            }\n        }\n        return extension.slice(start, end);\n    }\n    searchValue = \"-\" + key;\n    pos = extension.indexOf(searchValue);\n    if (pos !== -1 && pos + 3 === size) {\n        return '';\n    }\n    return undefined;\n}\nvar UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\n/**\n * https://tc39.es/ecma402/#sec-bestavailablelocale\n * @param availableLocales\n * @param locale\n */\nfunction bestAvailableLocale(availableLocales, locale) {\n    var candidate = locale;\n    while (true) {\n        if (~availableLocales.indexOf(candidate)) {\n            return candidate;\n        }\n        var pos = candidate.lastIndexOf('-');\n        if (!~pos) {\n            return undefined;\n        }\n        if (pos >= 2 && candidate[pos - 2] === '-') {\n            pos -= 2;\n        }\n        candidate = candidate.slice(0, pos);\n    }\n}\nfunction createLookupMatcher(getDefaultLocale) {\n    /**\n     * https://tc39.es/ecma402/#sec-lookupmatcher\n     */\n    return function lookupMatcher(availableLocales, requestedLocales) {\n        var result = { locale: '' };\n        for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n            var locale = requestedLocales_1[_i];\n            var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n            var availableLocale = bestAvailableLocale(availableLocales, noExtensionLocale);\n            if (availableLocale) {\n                result.locale = availableLocale;\n                if (locale !== noExtensionLocale) {\n                    result.extension = locale.slice(noExtensionLocale.length + 1, locale.length);\n                }\n                return result;\n            }\n        }\n        result.locale = getDefaultLocale();\n        return result;\n    };\n}\nfunction createBestFitMatcher(getDefaultLocale) {\n    return function bestFitMatcher(availableLocales, requestedLocales) {\n        var result = { locale: '' };\n        for (var _i = 0, requestedLocales_2 = requestedLocales; _i < requestedLocales_2.length; _i++) {\n            var locale = requestedLocales_2[_i];\n            var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n            var availableLocale = bestAvailableLocale(availableLocales, noExtensionLocale);\n            if (availableLocale) {\n                result.locale = availableLocale;\n                if (locale !== noExtensionLocale) {\n                    result.extension = locale.slice(noExtensionLocale.length + 1, locale.length);\n                }\n                return result;\n            }\n        }\n        result.locale = getDefaultLocale();\n        return result;\n    };\n}\nexport function getLocaleHierarchy(locale, aliases, parentLocales) {\n    var results = [locale];\n    if (aliases[locale]) {\n        locale = aliases[locale];\n        results.push(locale);\n    }\n    var parentLocale = parentLocales[locale];\n    if (parentLocale) {\n        results.push(parentLocale);\n    }\n    var localeParts = locale.split('-');\n    for (var i = localeParts.length; i > 1; i--) {\n        results.push(localeParts.slice(0, i - 1).join('-'));\n    }\n    return results;\n}\nfunction lookupSupportedLocales(availableLocales, requestedLocales) {\n    var subset = [];\n    for (var _i = 0, requestedLocales_3 = requestedLocales; _i < requestedLocales_3.length; _i++) {\n        var locale = requestedLocales_3[_i];\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        var availableLocale = bestAvailableLocale(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            subset.push(availableLocale);\n        }\n    }\n    return subset;\n}\nexport function supportedLocales(availableLocales, requestedLocales, options) {\n    var matcher = 'best fit';\n    if (options !== undefined) {\n        options = toObject(options);\n        matcher = getOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    }\n    if (matcher === 'best fit') {\n        return lookupSupportedLocales(availableLocales, requestedLocales);\n    }\n    return lookupSupportedLocales(availableLocales, requestedLocales);\n}\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\nexport function unpackData(locale, localeData, \n/** By default shallow merge the dictionaries. */\nreducer) {\n    if (reducer === void 0) { reducer = function (all, d) { return (__assign(__assign({}, all), d)); }; }\n    var localeHierarchy = getLocaleHierarchy(locale, localeData.aliases, localeData.parentLocales);\n    var dataToMerge = localeHierarchy\n        .map(function (l) { return localeData.data[l]; })\n        .filter(Boolean);\n    if (!dataToMerge.length) {\n        throw new MissingLocaleDataError(\"Missing locale data for \\\"\" + locale + \"\\\", lookup hierarchy: \" + localeHierarchy.join(', '));\n    }\n    dataToMerge.reverse();\n    return dataToMerge.reduce(reducer, {});\n}\n","// https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_diff_out.html#sec-issanctionedsimpleunitidentifier\nexport var SANCTIONED_UNITS = [\n    'angle-degree',\n    'area-acre',\n    'area-hectare',\n    'concentr-percent',\n    'digital-bit',\n    'digital-byte',\n    'digital-gigabit',\n    'digital-gigabyte',\n    'digital-kilobit',\n    'digital-kilobyte',\n    'digital-megabit',\n    'digital-megabyte',\n    'digital-petabyte',\n    'digital-terabit',\n    'digital-terabyte',\n    'duration-day',\n    'duration-hour',\n    'duration-millisecond',\n    'duration-minute',\n    'duration-month',\n    'duration-second',\n    'duration-week',\n    'duration-year',\n    'length-centimeter',\n    'length-foot',\n    'length-inch',\n    'length-kilometer',\n    'length-meter',\n    'length-mile-scandinavian',\n    'length-mile',\n    'length-millimeter',\n    'length-yard',\n    'mass-gram',\n    'mass-kilogram',\n    'mass-ounce',\n    'mass-pound',\n    'mass-stone',\n    'temperature-celsius',\n    'temperature-fahrenheit',\n    'volume-fluid-ounce',\n    'volume-gallon',\n    'volume-liter',\n    'volume-milliliter',\n];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\n","export var InternalSlotToken;\n(function (InternalSlotToken) {\n    // To prevent collision with {0} in CLDR\n    InternalSlotToken[\"compactName\"] = \"compactName\";\n    InternalSlotToken[\"compactSymbol\"] = \"compactSymbol\";\n    InternalSlotToken[\"currencyCode\"] = \"currencyCode\";\n    InternalSlotToken[\"currencyName\"] = \"currencyName\";\n    InternalSlotToken[\"currencyNarrowSymbol\"] = \"currencyNarrowSymbol\";\n    InternalSlotToken[\"currencySymbol\"] = \"currencySymbol\";\n    InternalSlotToken[\"minusSign\"] = \"minusSign\";\n    InternalSlotToken[\"number\"] = \"number\";\n    InternalSlotToken[\"percentSign\"] = \"percentSign\";\n    InternalSlotToken[\"plusSign\"] = \"plusSign\";\n    InternalSlotToken[\"scientificExponent\"] = \"scientificExponent\";\n    InternalSlotToken[\"scientificSeparator\"] = \"scientificSeparator\";\n    InternalSlotToken[\"unitName\"] = \"unitName\";\n    InternalSlotToken[\"unitNarrowSymbol\"] = \"unitNarrowSymbol\";\n    InternalSlotToken[\"unitSymbol\"] = \"unitSymbol\";\n})(InternalSlotToken || (InternalSlotToken = {}));\n","/**\n * Cannot do Math.log(x) / Math.log(10) bc if IEEE floating point issue\n * @param x number\n */\nexport function logBase10(x) {\n    if (x < 1) {\n        var fraction = String(x).split('.')[1];\n        var exponent = 0;\n        for (; fraction[exponent] === '0'; exponent++)\n            ;\n        return -exponent - 1;\n    }\n    return String(Math.floor(x)).length - 1;\n}\n// TODO: dedup with intl-pluralrules\n// https://tc39.es/proposal-unified-intl-numberformat/section11/numberformat_proposed_out.html#sec-torawfixed\nexport function toRawFixed(x, minFraction, maxFraction) {\n    var f = maxFraction;\n    var n;\n    {\n        var exactSolve = x * Math.pow(10, f);\n        var roundDown = Math.floor(exactSolve);\n        var roundUp = Math.ceil(exactSolve);\n        n = exactSolve - roundDown < roundUp - exactSolve ? roundDown : roundUp;\n    }\n    var xFinal = n / Math.pow(10, f);\n    var m = n === 0 ? '0' : n.toString();\n    var int;\n    if (f !== 0) {\n        var k = m.length;\n        if (k <= f) {\n            var z = repeat('0', f + 1 - k);\n            m = z + m;\n            k = f + 1;\n        }\n        var a = m.slice(0, k - f);\n        var b = m.slice(k - f);\n        m = a + \".\" + b;\n        int = a.length;\n    }\n    else {\n        int = m.length;\n    }\n    var cut = maxFraction - minFraction;\n    while (cut > 0 && m[m.length - 1] === '0') {\n        m = m.slice(0, -1);\n        cut--;\n    }\n    if (m[m.length - 1] === '.') {\n        m = m.slice(0, -1);\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n}\n// https://tc39.es/proposal-unified-intl-numberformat/section11/numberformat_proposed_out.html#sec-torawprecision\nexport function toRawPrecision(x, minPrecision, maxPrecision) {\n    var p = maxPrecision;\n    var m;\n    var e;\n    var xFinal;\n    if (x === 0) {\n        m = repeat('0', p);\n        e = 0;\n        xFinal = 0;\n    }\n    else {\n        e = Math.floor(logBase10(x));\n        var n = void 0;\n        {\n            var exactSolve = x / Math.pow(10, (e - p + 1));\n            var roundDown = Math.floor(exactSolve);\n            var roundUp = Math.ceil(exactSolve);\n            n = exactSolve - roundDown < roundUp - exactSolve ? roundDown : roundUp;\n        }\n        m = n.toString();\n        xFinal = n * Math.pow(10, (e - p + 1));\n    }\n    var int;\n    if (e >= p - 1) {\n        m = m + repeat('0', e - p + 1);\n        int = e + 1;\n    }\n    else if (e >= 0) {\n        m = m.slice(0, e + 1) + \".\" + m.slice(e + 1);\n        int = e + 1;\n    }\n    else {\n        m = \"0.\" + repeat('0', -e - 1) + m;\n        int = 1;\n    }\n    if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n        var cut = maxPrecision - minPrecision;\n        while (cut > 0 && m[m.length - 1] === '0') {\n            m = m.slice(0, -1);\n            cut--;\n        }\n        if (m[m.length - 1] === '.') {\n            m = m.slice(0, -1);\n        }\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n}\nexport function repeat(s, times) {\n    if (typeof s.repeat === 'function') {\n        return s.repeat(times);\n    }\n    var arr = new Array(times);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = s;\n    }\n    return arr.join('');\n}\n","import { InternalSlotToken, } from '@formatjs/intl-utils';\nvar CURRENCY_DISPLAYS = [\n    'code',\n    'symbol',\n    'narrowSymbol',\n    'name',\n];\nvar SIGN_DISPLAYS = [\n    'auto',\n    'always',\n    'never',\n    'exceptZero',\n];\n// What is this number?\n// Context: https://github.com/tc39/proposal-unified-intl-numberformat/issues/26\n// Right now pattern tree does not have room for different compact notation pattern\n// per exponent (e.g for zh-TW, 1000 is just {number}, not {number}K).\n// This number is chosen so we generate the most general pattern for compact, e.g\n// {number}{compactSymbol} or sth like that\nvar SPECIAL_NUMBER_HACK = '1000';\nvar UNIT_DISPLAYS = ['narrow', 'long', 'short'];\n// g flag bc this appears twice in accounting pattern\nvar CURRENCY_SYMBOL_REGEX = /¤/g;\nfunction extractDecimalFormatILD(data) {\n    if (!data) {\n        return;\n    }\n    return Object.keys(data).reduce(function (all, num) {\n        var pattern = data[num];\n        all[num] = Object.keys(pattern).reduce(function (all, p) {\n            all[p] = (pattern[p] || '').replace(/[¤0]/g, '').trim();\n            return all;\n        }, { other: pattern.other.replace(/[¤0]/g, '').trim() });\n        return all;\n    }, {});\n}\nfunction extractLDMLPluralRuleMap(m, k) {\n    return Object.keys(m).reduce(function (all, rule) {\n        all[rule] = m[rule][k];\n        return all;\n    }, { other: m.other[k] });\n}\nexport function extractILD(units, currencies, numbers, numberingSystem) {\n    return {\n        decimal: {\n            compactShort: extractDecimalFormatILD(numbers.decimal[numberingSystem].short),\n            compactLong: extractDecimalFormatILD(numbers.decimal[numberingSystem].long),\n        },\n        currency: {\n            compactShort: extractDecimalFormatILD(numbers.currency[numberingSystem].short),\n        },\n        symbols: numbers.symbols[numberingSystem],\n        currencySymbols: Object.keys(currencies).reduce(function (all, code) {\n            all[code] = {\n                currencyName: currencies[code].displayName,\n                currencySymbol: currencies[code].symbol,\n                currencyNarrowSymbol: currencies[code].narrow || currencies[code].symbol,\n            };\n            return all;\n        }, {}),\n        unitSymbols: Object.keys(units).reduce(function (all, unit) {\n            all[unit] = {\n                unitSymbol: extractLDMLPluralRuleMap(units[unit].short, 'symbol'),\n                unitNarrowSymbol: extractLDMLPluralRuleMap(units[unit].narrow, 'symbol'),\n                unitName: extractLDMLPluralRuleMap(units[unit].long, 'symbol'),\n            };\n            return all;\n        }, {}),\n    };\n}\n// Credit: https://github.com/andyearnshaw/Intl.js/blob/master/scripts/utils/reduce.js\n// Matches CLDR number patterns, e.g. #,##0.00, #,##,##0.00, #,##0.##, 0, etc.\nvar NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nvar SCIENTIFIC_SLOT = [\n    InternalSlotToken.number,\n    InternalSlotToken.scientificSeparator,\n    InternalSlotToken.scientificExponent,\n]\n    .map(function (t) { return \"{\" + t + \"}\"; })\n    .join('');\nvar DUMMY_PATTERN = '#';\nfunction produceSignPattern(positivePattern, negativePattern) {\n    if (negativePattern === void 0) { negativePattern = ''; }\n    if (!negativePattern) {\n        negativePattern = \"{\" + InternalSlotToken.minusSign + \"}\" + positivePattern;\n    }\n    var zeroPattern = positivePattern;\n    var alwaysPositivePattern = positivePattern.includes(\"{\" + InternalSlotToken.plusSign + \"}\")\n        ? positivePattern\n        : \"{\" + InternalSlotToken.plusSign + \"}\" + positivePattern;\n    return {\n        always: {\n            positivePattern: alwaysPositivePattern,\n            zeroPattern: alwaysPositivePattern,\n            negativePattern: negativePattern,\n        },\n        exceptZero: {\n            positivePattern: alwaysPositivePattern,\n            zeroPattern: zeroPattern,\n            negativePattern: negativePattern,\n        },\n        never: {\n            positivePattern: positivePattern,\n            zeroPattern: zeroPattern,\n            negativePattern: positivePattern,\n        },\n        auto: {\n            positivePattern: positivePattern,\n            zeroPattern: zeroPattern,\n            negativePattern: negativePattern,\n        },\n    };\n}\nfunction extractSignPattern(pattern) {\n    var patterns = pattern.split(';');\n    var _a = patterns.map(function (p) {\n        return p\n            .replace(NUMBER_PATTERN, \"{\" + InternalSlotToken.number + \"}\")\n            .replace('+', \"{\" + InternalSlotToken.plusSign + \"}\")\n            .replace('-', \"{\" + InternalSlotToken.minusSign + \"}\")\n            .replace('%', \"{\" + InternalSlotToken.percentSign + \"}\");\n    }), positivePattern = _a[0], negativePattern = _a[1];\n    return produceSignPattern(positivePattern, negativePattern);\n}\nvar dummySignPattern = extractSignPattern(\n// Dummy\nDUMMY_PATTERN);\nvar scientificSignPattern = extractSignPattern(SCIENTIFIC_SLOT);\n/**\n * Turn compact pattern like `0 trillion` or `¤0 trillion` to\n * `0 {compactSymbol}` or `¤0 {compactSymbol}`\n * @param pattern\n */\nfunction extractCompactSymbol(pattern, slotToken) {\n    if (slotToken === void 0) { slotToken = InternalSlotToken.compactSymbol; }\n    var compactUnit = pattern\n        .replace(/[¤0]/g, '')\n        // In case we're processing half-processed things\n        .replace(/({\\w+})/g, '')\n        .trim();\n    return pattern.replace(compactUnit, \"{\" + slotToken + \"}\");\n}\nfunction extractDecimalPattern(d, numberingSystem) {\n    var compactShortSignPattern = extractSignPattern(extractCompactSymbol(d.decimal[numberingSystem].short[SPECIAL_NUMBER_HACK].other));\n    var compactLongSignPattern = extractSignPattern(extractCompactSymbol(d.decimal[numberingSystem].long[SPECIAL_NUMBER_HACK].other, InternalSlotToken.compactName));\n    return SIGN_DISPLAYS.reduce(function (all, k) {\n        all[k] = {\n            standard: dummySignPattern[k],\n            scientific: scientificSignPattern[k],\n            compactShort: compactShortSignPattern[k],\n            compactLong: compactLongSignPattern[k],\n        };\n        return all;\n    }, {});\n}\nfunction extractPercentPattern(d, numberingSystem) {\n    var percentSignPattern = extractSignPattern(d.percent[numberingSystem]);\n    var scientificPercentSignPattern = extractSignPattern(d.percent[numberingSystem].replace(NUMBER_PATTERN, SCIENTIFIC_SLOT));\n    return SIGN_DISPLAYS.reduce(function (all, k) {\n        all[k] = {\n            standard: percentSignPattern[k],\n            scientific: scientificPercentSignPattern[k],\n            compactShort: percentSignPattern[k],\n            compactLong: percentSignPattern[k],\n        };\n        return all;\n    }, {});\n}\nvar INSERT_BEFORE_PATTERN_REGEX = /[^\\s(]¤/;\nvar INSERT_AFTER_PATTERN_REGEX = /¤[^\\s;]/;\nvar S_UNICODE_REGEX = /\\p{S}/u;\nfunction shouldInsertBefore(currency, pattern) {\n    // surroundingMatch [:digit:] check\n    return (INSERT_BEFORE_PATTERN_REGEX.test(pattern) &&\n        // [:^S:]\n        !S_UNICODE_REGEX.test(currency[0]));\n}\nfunction shouldInsertAfter(currency, pattern) {\n    return (INSERT_AFTER_PATTERN_REGEX.test(pattern) &&\n        // [:^S:]\n        !S_UNICODE_REGEX.test(currency[currency.length - 1]));\n}\n/**\n *\n * @param currencyUnitPattern\n * @param decimalShortPattern\n * @param decimalLongPattern\n * @param currencyToken\n */\nfunction extractStandardCurrencyPattern(currencyStandardPattern, currencyUnitPattern, currencyShortPattern, decimalShortPattern, decimalLongPattern, currencyDisplay) {\n    var standardPattern;\n    var scientificPattern;\n    var compactShortPattern;\n    var compactLongPattern;\n    // For full currency name, we use unitPattern in conjunction with\n    // decimal short/long pattern, so\n    // `{0} {1}` + `0 thousand` -> `0 thousand {1}` -> {number} {compactName} {currencyName}`\n    if (currencyDisplay === 'name') {\n        standardPattern = currencyUnitPattern.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n            return p === '0' ? DUMMY_PATTERN : \"{\" + InternalSlotToken.currencyName + \"}\";\n        });\n        scientificPattern = currencyUnitPattern.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n            return p === '0' ? SCIENTIFIC_SLOT : \"{\" + InternalSlotToken.currencyName + \"}\";\n        });\n        compactShortPattern = currencyUnitPattern.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n            return p === '0'\n                ? extractCompactSymbol(decimalShortPattern)\n                : \"{\" + InternalSlotToken.currencyName + \"}\";\n        });\n        compactLongPattern = currencyUnitPattern.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n            return p === '0'\n                ? extractCompactSymbol(decimalLongPattern, InternalSlotToken.compactName)\n                : \"{\" + InternalSlotToken.currencyName + \"}\";\n        });\n    }\n    // For currency symbol/code, it's trickier\n    // standard uses the currency standard pattern\n    // scientific uses the currency standard pattern but replace digits w/ scientific pattern\n    // short uses currency short pattern, otherwise nothing\n    // long uses currency long pattern, otherwise short, otherwise nothing\n    else {\n        standardPattern = currencyStandardPattern;\n        scientificPattern = currencyStandardPattern.replace(NUMBER_PATTERN, SCIENTIFIC_SLOT);\n        compactShortPattern = extractCompactSymbol(currencyShortPattern);\n        compactLongPattern = extractCompactSymbol(currencyShortPattern);\n    }\n    return SIGN_DISPLAYS.reduce(function (all, signDisplay) {\n        all[signDisplay] = {\n            standard: extractSignPattern(standardPattern)[signDisplay],\n            scientific: extractSignPattern(scientificPattern)[signDisplay],\n            compactShort: extractSignPattern(compactShortPattern)[signDisplay],\n            compactLong: extractSignPattern(compactLongPattern)[signDisplay],\n        };\n        return all;\n    }, {});\n}\nfunction extractAccountingCurrencyPattern(currencyAccountingPattern, currencyUnitPattern, currencyShortPattern, decimalShortPattern, decimalLongPattern, currencyDisplay) {\n    var standardPattern;\n    var scientificPattern;\n    var compactShortPattern;\n    var compactLongPattern;\n    // For full currency name, we use unitPattern in conjunction with\n    // decimal short/long pattern, so\n    // `{0} {1}` + `0 thousand` -> `0 thousand {1}` -> {number} {compactName} {currencyName}`\n    if (currencyDisplay === 'name') {\n        standardPattern = currencyUnitPattern.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n            return p === '0' ? DUMMY_PATTERN : \"{\" + InternalSlotToken.currencyName + \"}\";\n        });\n        scientificPattern = currencyUnitPattern.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n            return p === '0' ? SCIENTIFIC_SLOT : \"{\" + InternalSlotToken.currencyName + \"}\";\n        });\n        compactShortPattern = currencyUnitPattern.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n            return p === '0'\n                ? extractCompactSymbol(decimalShortPattern)\n                : \"{\" + InternalSlotToken.currencyName + \"}\";\n        });\n        compactLongPattern = currencyUnitPattern.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n            return p === '0'\n                ? extractCompactSymbol(decimalLongPattern, InternalSlotToken.compactName)\n                : \"{\" + InternalSlotToken.currencyName + \"}\";\n        });\n    }\n    // For currency symbol/code, it's trickier\n    // standard uses the currency accounting pattern\n    // scientific uses the currency accounting pattern but replace digits w/ scientific pattern\n    // short uses currency short pattern, otherwise nothing\n    // long uses currency long pattern, otherwise short, otherwise nothing\n    else {\n        standardPattern = currencyAccountingPattern;\n        scientificPattern = currencyAccountingPattern.replace(NUMBER_PATTERN, SCIENTIFIC_SLOT);\n        compactShortPattern = extractCompactSymbol(currencyShortPattern);\n        compactLongPattern = extractCompactSymbol(currencyShortPattern);\n    }\n    return SIGN_DISPLAYS.reduce(function (all, signDisplay) {\n        all[signDisplay] = {\n            standard: extractSignPattern(standardPattern)[signDisplay],\n            scientific: extractSignPattern(scientificPattern)[signDisplay],\n            compactShort: extractSignPattern(compactShortPattern)[signDisplay],\n            compactLong: extractSignPattern(compactLongPattern)[signDisplay],\n        };\n        return all;\n    }, {});\n}\nfunction replaceCurrencySymbolWithToken(currency, pattern, insertBetween, currencyToken) {\n    // Check afterCurrency\n    if (shouldInsertAfter(currency, pattern)) {\n        return pattern.replace(CURRENCY_SYMBOL_REGEX, \"{\" + currencyToken + \"}\" + insertBetween);\n    }\n    // Check beforeCurrency\n    if (shouldInsertBefore(currency, pattern)) {\n        return pattern.replace(CURRENCY_SYMBOL_REGEX, insertBetween + \"{\" + currencyToken + \"}\");\n    }\n    return pattern.replace(CURRENCY_SYMBOL_REGEX, \"{\" + currencyToken + \"}\");\n}\nfunction extractCurrencyPatternForCurrency(d, c, currency, numberingSystem) {\n    var _a;\n    var insertBetween = d.currency[numberingSystem].currencySpacing.beforeInsertBetween;\n    var currencyStandardPattern = d.currency[numberingSystem].standard;\n    var currencyUnitPattern = d.currency[numberingSystem].unitPattern;\n    var currencyAccountingPattern = d.currency[numberingSystem].accounting;\n    var currencyShortPattern = ((_a = d.currency[numberingSystem].short) === null || _a === void 0 ? void 0 : _a[1000].other) || '';\n    var decimalShortPattern = d.decimal[numberingSystem].short[SPECIAL_NUMBER_HACK].other;\n    var decimalLongPattern = d.decimal[numberingSystem].long[SPECIAL_NUMBER_HACK].other;\n    var currencySymbol = c[currency].symbol;\n    var currencyNarrowSymbol = c[currency].narrow;\n    var standardCurrencyPattern = {\n        standard: extractStandardCurrencyPattern(currencyStandardPattern, currencyUnitPattern, currencyShortPattern, decimalShortPattern, decimalLongPattern, 'name'),\n        accounting: extractAccountingCurrencyPattern(currencyAccountingPattern, currencyUnitPattern, currencyShortPattern, decimalShortPattern, decimalLongPattern, 'name'),\n    };\n    return CURRENCY_DISPLAYS.reduce(function (all, currencyDisplay) {\n        if (currencyDisplay === 'name') {\n            all[currencyDisplay] = standardCurrencyPattern;\n        }\n        else {\n            var currencyToken = currencyDisplay === 'code'\n                ? InternalSlotToken.currencyCode\n                : currencyDisplay === 'symbol'\n                    ? InternalSlotToken.currencySymbol\n                    : InternalSlotToken.currencyNarrowSymbol;\n            var resolvedCurrency = currencyDisplay === 'code'\n                ? currency\n                : currencyDisplay === 'symbol'\n                    ? currencySymbol\n                    : currencyNarrowSymbol;\n            all[currencyDisplay] = {\n                standard: extractStandardCurrencyPattern(replaceCurrencySymbolWithToken(resolvedCurrency, currencyStandardPattern, insertBetween, currencyToken), currencyUnitPattern, replaceCurrencySymbolWithToken(resolvedCurrency, currencyShortPattern, insertBetween, currencyToken), decimalShortPattern, decimalLongPattern, currencyDisplay),\n                accounting: extractAccountingCurrencyPattern(replaceCurrencySymbolWithToken(resolvedCurrency, currencyAccountingPattern, insertBetween, currencyToken), currencyUnitPattern, replaceCurrencySymbolWithToken(resolvedCurrency, currencyShortPattern, insertBetween, currencyToken), decimalShortPattern, decimalLongPattern, currencyDisplay),\n            };\n        }\n        return all;\n    }, {});\n}\nvar STANDARD_PATTERN_REGEX = /{(\\d)}/g;\nfunction generateUnitPatternPayload(unitPatternStr, display, compactShortDecimalPattern, compactLongDecimalPattern) {\n    var unitToken = display === 'long'\n        ? InternalSlotToken.unitName\n        : display === 'short'\n            ? InternalSlotToken.unitSymbol\n            : InternalSlotToken.unitNarrowSymbol;\n    var standardUnitPatternStr = unitPatternStr.replace(STANDARD_PATTERN_REGEX, function (_, p) { return (p === '0' ? DUMMY_PATTERN : \"{\" + unitToken + \"}\"); });\n    var scientificUnitPatternStr = unitPatternStr.replace(STANDARD_PATTERN_REGEX, function (_, p) { return (p === '0' ? SCIENTIFIC_SLOT : \"{\" + unitToken + \"}\"); });\n    var compactShortUnitPatternStr = unitPatternStr.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n        return p === '0'\n            ? extractCompactSymbol(compactShortDecimalPattern)\n            : \"{\" + unitToken + \"}\";\n    });\n    var compactLongUnitPatternStr = unitPatternStr.replace(STANDARD_PATTERN_REGEX, function (_, p) {\n        return p === '0'\n            ? extractCompactSymbol(compactLongDecimalPattern, InternalSlotToken.compactName)\n            : \"{\" + unitToken + \"}\";\n    });\n    var standard = extractSignPattern(standardUnitPatternStr);\n    var scientific = extractSignPattern(scientificUnitPatternStr);\n    var compactShort = extractSignPattern(compactShortUnitPatternStr);\n    var compactLong = extractSignPattern(compactLongUnitPatternStr);\n    return SIGN_DISPLAYS.reduce(function (all, k) {\n        all[k] = {\n            standard: standard[k],\n            scientific: scientific[k],\n            compactShort: compactShort[k],\n            compactLong: compactLong[k],\n        };\n        return all;\n    }, {});\n}\nfunction extractUnitPatternForUnit(d, u, unit, numberingSystem) {\n    var unitData = u[unit];\n    var patterns = {};\n    for (var _i = 0, UNIT_DISPLAYS_1 = UNIT_DISPLAYS; _i < UNIT_DISPLAYS_1.length; _i++) {\n        var unitDisplay = UNIT_DISPLAYS_1[_i];\n        patterns[unitDisplay] = generateUnitPatternPayload(unitData[unitDisplay].other.pattern, unitDisplay, d.decimal[numberingSystem].short[SPECIAL_NUMBER_HACK].other, d.decimal[numberingSystem].long[SPECIAL_NUMBER_HACK].other);\n    }\n    return patterns;\n}\nfunction generateContinuousILND(startChar) {\n    var startCharCode = startChar.charCodeAt(0);\n    var arr = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        arr[i] = String.fromCharCode(startCharCode + i);\n    }\n    return arr;\n}\n// https://tc39.es/proposal-unified-intl-numberformat/section11/numberformat_proposed_out.html#table-numbering-system-digits\nexport var ILND = (function () {\n    return {\n        arab: generateContinuousILND('\\u0660'),\n        arabext: generateContinuousILND('\\u06f0'),\n        bali: generateContinuousILND('\\u1b50'),\n        beng: generateContinuousILND('\\u09e6'),\n        deva: generateContinuousILND('\\u0966'),\n        fullwide: generateContinuousILND('\\uff10'),\n        gujr: generateContinuousILND('\\u0ae6'),\n        guru: generateContinuousILND('\\u0a66'),\n        khmr: generateContinuousILND('\\u17e0'),\n        knda: generateContinuousILND('\\u0ce6'),\n        laoo: generateContinuousILND('\\u0ed0'),\n        latn: generateContinuousILND('\\u0030'),\n        limb: generateContinuousILND('\\u1946'),\n        mlym: generateContinuousILND('\\u0d66'),\n        mong: generateContinuousILND('\\u1810'),\n        mymr: generateContinuousILND('\\u1040'),\n        orya: generateContinuousILND('\\u0b66'),\n        tamldec: generateContinuousILND('\\u0be6'),\n        telu: generateContinuousILND('\\u0c66'),\n        thai: generateContinuousILND('\\u0e50'),\n        tibt: generateContinuousILND('\\u0f20'),\n        hanidec: [\n            '\\u3007',\n            '\\u4e00',\n            '\\u4e8c',\n            '\\u4e09',\n            '\\u56db',\n            '\\u4e94',\n            '\\u516d',\n            '\\u4e03',\n            '\\u516b',\n            '\\u4e5d',\n        ],\n    };\n})();\nexport function extractPatterns(units, currencies, numbers, numberingSystem, unit, currency) {\n    var _a, _b;\n    return {\n        decimal: extractDecimalPattern(numbers, numberingSystem),\n        percent: extractPercentPattern(numbers, numberingSystem),\n        unit: unit\n            ? (_a = {},\n                _a[unit] = extractUnitPatternForUnit(numbers, units, unit, numberingSystem),\n                _a) : {},\n        currency: currency\n            ? (_b = {},\n                _b[currency] = extractCurrencyPatternForCurrency(numbers, currencies, currency, numberingSystem),\n                _b) : {},\n    };\n}\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { createResolveLocale, toObject, supportedLocales, getCanonicalLocales, setInternalSlot, setMultiInternalSlots, getMultiInternalSlots, getOption, getInternalSlot, InternalSlotToken, setNumberFormatDigitOptions, SANCTIONED_UNITS, invariant, objectIs, unpackData, } from '@formatjs/intl-utils';\nimport { toRawFixed, toRawPrecision, logBase10, repeat, } from './utils';\nimport { ILND, extractILD, extractPatterns } from './data';\nimport * as currencyDigitsData from './currency-digits.json';\nvar RESOLVED_OPTIONS_KEYS = [\n    'locale',\n    'numberingSystem',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'currencySign',\n    'unit',\n    'unitDisplay',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    'useGrouping',\n    'notation',\n    'compactDisplay',\n    'signDisplay',\n];\nvar SHORTENED_SACTION_UNITS = SANCTIONED_UNITS.map(function (unit) {\n    return unit.replace(/^(.*?)-/, '');\n});\nvar NOT_A_Z_REGEX = /[^A-Z]/;\nfunction toUpperCase(str) {\n    return str.replace(/([a-z])/g, function (_, c) { return c.toUpperCase(); });\n}\nfunction toLowerCase(str) {\n    return str.replace(/([A-Z])/g, function (_, c) { return c.toLowerCase(); });\n}\n/**\n * https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-iswellformedcurrencycode\n * @param currency\n */\nfunction isWellFormedCurrencyCode(currency) {\n    currency = toUpperCase(currency);\n    if (currency.length !== 3) {\n        return false;\n    }\n    if (NOT_A_Z_REGEX.test(currency)) {\n        return false;\n    }\n    return true;\n}\n/**\n * https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-iswellformedunitidentifier\n * @param unit\n */\nfunction isWellFormedUnitIdentifier(unit) {\n    unit = toLowerCase(unit);\n    if (SHORTENED_SACTION_UNITS.indexOf(unit) > -1) {\n        return true;\n    }\n    var units = unit.split('-per-');\n    if (units.length !== 2) {\n        return false;\n    }\n    if (SHORTENED_SACTION_UNITS.indexOf(units[0]) < 0 ||\n        SHORTENED_SACTION_UNITS.indexOf(units[1]) < 0) {\n        return false;\n    }\n    return true;\n}\n/**\n * Check if a formatting number with unit is supported\n * @public\n * @param unit unit to check\n */\nexport function isUnitSupported(unit) {\n    try {\n        new Intl.NumberFormat(undefined, {\n            style: 'unit',\n            unit: unit,\n        });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nvar __INTERNAL_SLOT_MAP__ = new WeakMap();\nfunction currencyDigits(c) {\n    return c in currencyDigitsData ? currencyDigitsData[c] : 2;\n}\nfunction initializeNumberFormat(nf, locales, opts) {\n    var requestedLocales = getCanonicalLocales(locales);\n    var options = opts === undefined ? Object.create(null) : toObject(opts);\n    var opt = Object.create(null);\n    var matcher = getOption(options, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n    opt.localeMatcher = matcher;\n    var localeData = UnifiedNumberFormat.localeData;\n    var r = createResolveLocale(UnifiedNumberFormat.getDefaultLocale)(getInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'availableLocales'), requestedLocales, opt, getInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'relevantExtensionKeys'), localeData);\n    var ildData = localeData[r.locale];\n    var numberingSystem = r.nu;\n    setMultiInternalSlots(__INTERNAL_SLOT_MAP__, nf, {\n        locale: r.locale,\n        dataLocale: r.dataLocale,\n        numberingSystem: numberingSystem,\n        ild: extractILD(ildData.units, ildData.currencies, ildData.numbers, numberingSystem),\n    });\n    // https://tc39.es/proposal-unified-intl-numberformat/section11/numberformat_proposed_out.html#sec-setnumberformatunitoptions\n    setNumberFormatUnitOptions(nf, options);\n    var style = getInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'style');\n    // ---\n    var mnfdDefault;\n    var mxfdDefault;\n    if (style === 'currency') {\n        var currency = getInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'currency');\n        var cDigits = currencyDigits(currency);\n        mnfdDefault = cDigits;\n        mxfdDefault = cDigits;\n    }\n    else {\n        mnfdDefault = 0;\n        mxfdDefault = style === 'percent' ? 0 : 3;\n    }\n    var notation = getOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n    setInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'notation', notation);\n    setNumberFormatDigitOptions(__INTERNAL_SLOT_MAP__, nf, options, mnfdDefault, mxfdDefault, notation);\n    var compactDisplay = getOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n    if (notation === 'compact') {\n        setInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'compactDisplay', compactDisplay);\n    }\n    var useGrouping = getOption(options, 'useGrouping', 'boolean', undefined, true);\n    setInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'useGrouping', useGrouping);\n    var signDisplay = getOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero'], 'auto');\n    setInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'signDisplay', signDisplay);\n}\nvar UnifiedNumberFormat = /** @class */ (function () {\n    // private unitPattern?: UnitData;\n    // private currencyNarrowSymbol?: string;\n    function UnifiedNumberFormat(locales, options) {\n        // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n        var newTarget = this && this instanceof UnifiedNumberFormat ? this.constructor : void 0;\n        if (!newTarget) {\n            throw new TypeError(\"Intl.PluralRules must be called with 'new'\");\n        }\n        setMultiInternalSlots(__INTERNAL_SLOT_MAP__, this, {\n            relevantExtensionKeys: ['nu'],\n            availableLocales: UnifiedNumberFormat.availableLocales,\n        });\n        initializeNumberFormat(this, locales, options);\n        var _a = getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'locale'), ildData = UnifiedNumberFormat.localeData[_a];\n        this.pl = new Intl.PluralRules(locales);\n        setMultiInternalSlots(__INTERNAL_SLOT_MAP__, this, {\n            patterns: extractPatterns(ildData.units, ildData.currencies, ildData.numbers, getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'numberingSystem'), getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'unit'), getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'currency')),\n        });\n        // test262/test/intl402/NumberFormat/prototype/format/bound-to-numberformat-instance.js\n        this.format = this.format.bind(this);\n        this.formatToParts = this.formatToParts.bind(this);\n    }\n    UnifiedNumberFormat.prototype.format = function (num) {\n        return this.formatToParts(num)\n            .map(function (x) { return x.value; })\n            .join('');\n    };\n    UnifiedNumberFormat.prototype.formatToParts = function (x) {\n        // https://tc39.es/proposal-unified-intl-numberformat/section11/numberformat_proposed_out.html#sec-partitionnumberpattern\n        var exponent = 0;\n        var ild = getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'ild');\n        var n;\n        x = toNumeric(x);\n        var formattedX = x;\n        if (isNaN(x)) {\n            n = ild.symbols.nan;\n        }\n        else if (!isFinite(x)) {\n            n = ild.symbols.infinity;\n        }\n        else {\n            if (getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'style') === 'percent') {\n                formattedX *= 100;\n            }\n            exponent = computeExponent(this, formattedX);\n            formattedX /= Math.pow(10, exponent);\n            var formatNumberResult = formatNumberToString(this, formattedX);\n            n = formatNumberResult.formattedString;\n            formattedX = formatNumberResult.roundedNumber;\n        }\n        var pattern = getNumberFormatPattern(this, x, exponent);\n        var patternParts = pattern.split(/({\\w+})/).filter(Boolean);\n        var results = [];\n        for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n            var part = patternParts_1[_i];\n            if (part[0] !== '{') {\n                results.push({ type: 'literal', value: part });\n            }\n            else {\n                var p = part.slice(1, -1);\n                switch (p) {\n                    case InternalSlotToken.number: {\n                        if (isNaN(formattedX)) {\n                            results.push({ type: 'nan', value: n });\n                        }\n                        else if (formattedX === Infinity || x === -Infinity) {\n                            results.push({ type: 'infinity', value: n });\n                        }\n                        else {\n                            var _a = getMultiInternalSlots(__INTERNAL_SLOT_MAP__, this, 'numberingSystem', 'useGrouping'), nu = _a.numberingSystem, useGrouping = _a.useGrouping;\n                            if (nu && ILND.hasOwnProperty(nu)) {\n                                // Replace digits\n                                var replacementTable = ILND[nu];\n                                var replacedDigits = '';\n                                for (var _b = 0, n_1 = n; _b < n_1.length; _b++) {\n                                    var digit = n_1[_b];\n                                    // digit can be `.` if it's fractional\n                                    replacedDigits += replacementTable[+digit] || digit;\n                                }\n                                n = replacedDigits;\n                            }\n                            var decimalSepIndex = n.indexOf('.');\n                            var integer = void 0;\n                            var fraction = void 0;\n                            if (decimalSepIndex > 0) {\n                                integer = n.slice(0, decimalSepIndex);\n                                fraction = n.slice(decimalSepIndex + 1);\n                            }\n                            else {\n                                integer = n;\n                            }\n                            if (useGrouping) {\n                                var groupSepSymbol = ild.symbols.group;\n                                var groups = [];\n                                // Assuming that the group separator is always inserted between every 3 digits.\n                                var i = integer.length - 3;\n                                for (; i > 0; i -= 3) {\n                                    groups.push(integer.slice(i, i + 3));\n                                }\n                                groups.push(integer.slice(0, i + 3));\n                                while (groups.length > 0) {\n                                    var integerGroup = groups.pop();\n                                    results.push({ type: 'integer', value: integerGroup });\n                                    if (groups.length > 0) {\n                                        results.push({ type: 'group', value: groupSepSymbol });\n                                    }\n                                }\n                            }\n                            else {\n                                results.push({ type: 'integer', value: integer });\n                            }\n                            if (fraction !== undefined) {\n                                results.push({ type: 'decimal', value: ild.symbols.decimal }, { type: 'fraction', value: fraction });\n                            }\n                        }\n                        break;\n                    }\n                    case InternalSlotToken.plusSign:\n                        results.push({\n                            type: 'plusSign',\n                            value: ild.symbols.plusSign,\n                        });\n                        break;\n                    case InternalSlotToken.minusSign:\n                        results.push({\n                            type: 'minusSign',\n                            value: ild.symbols.minusSign,\n                        });\n                        break;\n                    case InternalSlotToken.compactSymbol:\n                    case InternalSlotToken.compactName:\n                        var compactData = ild.decimal[p === 'compactName' ? 'compactLong' : 'compactShort'];\n                        if (compactData) {\n                            results.push({\n                                type: 'compact',\n                                value: selectPlural(this.pl, formattedX, compactData[String(Math.pow(10, exponent))]),\n                            });\n                        }\n                        break;\n                    case InternalSlotToken.scientificSeparator:\n                        results.push({\n                            type: 'exponentSeparator',\n                            value: ild.symbols.exponential,\n                        });\n                        break;\n                    case InternalSlotToken.scientificExponent: {\n                        if (exponent < 0) {\n                            results.push({\n                                type: 'exponentMinusSign',\n                                value: ild.symbols.minusSign,\n                            });\n                            exponent = -exponent;\n                        }\n                        var exponentResult = toRawFixed(exponent, 0, 0);\n                        results.push({\n                            type: 'exponentInteger',\n                            value: exponentResult.formattedString,\n                        });\n                        break;\n                    }\n                    case InternalSlotToken.percentSign:\n                        results.push({\n                            type: 'percentSign',\n                            value: ild.symbols.percentSign,\n                        });\n                        break;\n                    case InternalSlotToken.unitSymbol:\n                    case InternalSlotToken.unitNarrowSymbol:\n                    case InternalSlotToken.unitName: {\n                        var style = getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'style');\n                        if (style === 'unit') {\n                            var unit = getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'unit');\n                            var unitSymbols = ild.unitSymbols[unit];\n                            var mu = selectPlural(this.pl, formattedX, unitSymbols[p] || unitSymbols[InternalSlotToken.unitSymbol]);\n                            results.push({ type: 'unit', value: mu });\n                        }\n                        break;\n                    }\n                    case InternalSlotToken.currencyCode:\n                    case InternalSlotToken.currencySymbol:\n                    case InternalSlotToken.currencyNarrowSymbol:\n                    case InternalSlotToken.currencyName: {\n                        var currency = getInternalSlot(__INTERNAL_SLOT_MAP__, this, 'currency');\n                        var cd = void 0;\n                        if (p === InternalSlotToken.currencyCode) {\n                            cd = currency;\n                        }\n                        else if (p === InternalSlotToken.currencyName) {\n                            // TODO: make plural work with scientific notation\n                            cd = selectPlural(this.pl, formattedX, ild.currencySymbols[currency].currencyName);\n                        }\n                        else {\n                            cd = ild.currencySymbols[currency][p];\n                        }\n                        results.push({ type: 'currency', value: cd });\n                        break;\n                    }\n                    default:\n                        throw Error(\"unrecognized pattern part \\\"\" + p + \"\\\" in \\\"\" + pattern + \"\\\"\");\n                }\n            }\n        }\n        return results;\n    };\n    UnifiedNumberFormat.prototype.resolvedOptions = function () {\n        var slots = getMultiInternalSlots.apply(void 0, __spreadArrays([__INTERNAL_SLOT_MAP__,\n            this], RESOLVED_OPTIONS_KEYS));\n        var ro = {};\n        for (var _i = 0, RESOLVED_OPTIONS_KEYS_1 = RESOLVED_OPTIONS_KEYS; _i < RESOLVED_OPTIONS_KEYS_1.length; _i++) {\n            var key = RESOLVED_OPTIONS_KEYS_1[_i];\n            var value = slots[key];\n            if (value !== undefined) {\n                ro[key] = value;\n            }\n        }\n        return ro;\n    };\n    UnifiedNumberFormat.supportedLocalesOf = function (locales, options) {\n        return supportedLocales(UnifiedNumberFormat.availableLocales, getCanonicalLocales(locales), options);\n    };\n    UnifiedNumberFormat.__addLocaleData = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n            var datum = data_1[_a];\n            var availableLocales = Object.keys(__spreadArrays(datum.availableLocales, Object.keys(datum.aliases), Object.keys(datum.parentLocales)).reduce(function (all, k) {\n                all[k] = true;\n                return all;\n            }, {}));\n            for (var _b = 0, availableLocales_1 = availableLocales; _b < availableLocales_1.length; _b++) {\n                var locale = availableLocales_1[_b];\n                try {\n                    UnifiedNumberFormat.localeData[locale] = unpackData(locale, datum);\n                }\n                catch (e) {\n                    // Ignore if we got no data\n                }\n            }\n        }\n        UnifiedNumberFormat.availableLocales = Object.keys(UnifiedNumberFormat.localeData);\n        if (!UnifiedNumberFormat.__defaultLocale) {\n            UnifiedNumberFormat.__defaultLocale =\n                UnifiedNumberFormat.availableLocales[0];\n        }\n    };\n    UnifiedNumberFormat.getDefaultLocale = function () {\n        return UnifiedNumberFormat.__defaultLocale;\n    };\n    UnifiedNumberFormat.localeData = {};\n    UnifiedNumberFormat.availableLocales = [];\n    UnifiedNumberFormat.__defaultLocale = 'en';\n    UnifiedNumberFormat.polyfilled = true;\n    return UnifiedNumberFormat;\n}());\nexport { UnifiedNumberFormat };\nfunction setNumberFormatUnitOptions(nf, options) {\n    if (options === void 0) { options = {}; }\n    // https://tc39.es/proposal-unified-intl-numberformat/section11/numberformat_proposed_out.html#sec-setnumberformatunitoptions\n    var style = getOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    setInternalSlot(__INTERNAL_SLOT_MAP__, nf, 'style', style);\n    var currency = getOption(options, 'currency', 'string', undefined, undefined);\n    if (currency !== undefined && !isWellFormedCurrencyCode(currency)) {\n        throw RangeError('Malformed currency code');\n    }\n    var currencyDisplay = getOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    var currencySign = getOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    var unit = getOption(options, 'unit', 'string', undefined, undefined);\n    if (unit !== undefined && !isWellFormedUnitIdentifier(unit)) {\n        throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n    }\n    var unitDisplay = getOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    if (style === 'currency') {\n        if (currency === undefined) {\n            throw new TypeError('currency cannot be undefined');\n        }\n        setMultiInternalSlots(__INTERNAL_SLOT_MAP__, nf, {\n            currency: currency.toUpperCase(),\n            currencyDisplay: currencyDisplay,\n            currencySign: currencySign,\n        });\n    }\n    else if (style === 'unit') {\n        if (unit === undefined) {\n            throw new TypeError('unit cannot be undefined');\n        }\n        setMultiInternalSlots(__INTERNAL_SLOT_MAP__, nf, {\n            unit: unit,\n            unitDisplay: unitDisplay,\n        });\n    }\n}\n// Taking the shortcut here and used the native NumberFormat for formatting numbers.\nfunction formatNumberToString(numberFormat, x) {\n    var isNegative = x < 0 || objectIs(x, -0);\n    if (isNegative) {\n        x = -x;\n    }\n    var _a = getMultiInternalSlots(__INTERNAL_SLOT_MAP__, numberFormat, 'roundingType', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumIntegerDigits', 'minimumSignificantDigits', 'maximumSignificantDigits'), roundingType = _a.roundingType, minimumSignificantDigits = _a.minimumSignificantDigits, maximumSignificantDigits = _a.maximumSignificantDigits, minimumFractionDigits = _a.minimumFractionDigits, maximumFractionDigits = _a.maximumFractionDigits, minimumIntegerDigits = _a.minimumIntegerDigits;\n    var result;\n    if (roundingType === 'significantDigits') {\n        result = toRawPrecision(x, minimumSignificantDigits, maximumSignificantDigits);\n    }\n    else if (roundingType === 'fractionDigits') {\n        result = toRawFixed(x, minimumFractionDigits, maximumFractionDigits);\n    }\n    else {\n        invariant(roundingType === 'compactRounding', 'roundingType must be compactRounding');\n        result = toRawFixed(x, 0, 0);\n        if (result.integerDigitsCount === 1) {\n            result = toRawPrecision(x, 1, 2);\n        }\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    var int = result.integerDigitsCount;\n    var minInteger = minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (isNegative) {\n        x = -x;\n    }\n    return { roundedNumber: x, formattedString: string };\n}\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n */\nfunction computeExponent(numberFormat, x) {\n    if (x === 0) {\n        return 0;\n    }\n    if (x < 0) {\n        x = -x;\n    }\n    var magnitude = logBase10(x);\n    var exponent = computeExponentForMagnitude(numberFormat, magnitude);\n    x = x / Math.pow(10, exponent); // potential IEEE floating point error\n    var formatNumberResult = formatNumberToString(numberFormat, x);\n    if (formatNumberResult.roundedNumber === 0) {\n        return exponent;\n    }\n    var newMagnitude = logBase10(x);\n    if (newMagnitude === magnitude - exponent) {\n        return exponent;\n    }\n    return computeExponentForMagnitude(numberFormat, magnitude + 1);\n}\n/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nfunction computeExponentForMagnitude(numberFormat, magnitude) {\n    var notation = getInternalSlot(__INTERNAL_SLOT_MAP__, numberFormat, 'notation');\n    var style = getInternalSlot(__INTERNAL_SLOT_MAP__, numberFormat, 'style');\n    var ild = getInternalSlot(__INTERNAL_SLOT_MAP__, numberFormat, 'ild');\n    switch (notation) {\n        case 'standard':\n            return 0;\n        case 'scientific':\n            return magnitude;\n        case 'engineering':\n            return Math.floor(magnitude / 3) * 3;\n        case 'compact': {\n            var symbols = style === 'decimal' ? ild.decimal : ild.currency;\n            var thresholdMap = symbols.compactLong || symbols.compactShort;\n            if (!thresholdMap) {\n                return 0;\n            }\n            var num = String(Math.pow(10, magnitude));\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n            if (num < thresholds[0]) {\n                return 0;\n            }\n            if (num > thresholds[thresholds.length - 1]) {\n                return logBase10(+thresholds[thresholds.length - 1]);\n            }\n            var i = thresholds.indexOf(num);\n            for (; i > 0 &&\n                thresholdMap[thresholds[i - 1]].other === thresholdMap[num].other; i--)\n                ;\n            return logBase10(+thresholds[i]);\n        }\n    }\n}\n/**\n * https://tc39.es/proposal-unified-intl-numberformat/section11/numberformat_proposed_out.html#sec-getnumberformatpattern\n *\n * The abstract operation GetNumberFormatPattern considers the resolved unit-related options in the\n * number format object along with the final scaled and rounded number being formatted and returns a\n * pattern, a String value as described in 1.3.3.\n */\nfunction getNumberFormatPattern(numberFormat, x, exponent) {\n    var _a = getMultiInternalSlots(__INTERNAL_SLOT_MAP__, numberFormat, 'style', 'patterns', 'signDisplay', 'notation'), style = _a.style, slots = _a.patterns;\n    var patterns;\n    switch (style) {\n        case 'percent':\n            patterns = slots.percent;\n            break;\n        case 'unit': {\n            var unitDisplay = getInternalSlot(__INTERNAL_SLOT_MAP__, numberFormat, 'unitDisplay');\n            var unit = getInternalSlot(__INTERNAL_SLOT_MAP__, numberFormat, 'unit');\n            patterns = slots.unit[unit][unitDisplay];\n            break;\n        }\n        case 'currency': {\n            var _b = getMultiInternalSlots(__INTERNAL_SLOT_MAP__, numberFormat, 'currency', 'currencyDisplay', 'currencySign'), currency = _b.currency, currencyDisplay = _b.currencyDisplay, currencySign = _b.currencySign;\n            patterns = slots.currency[currency][currencyDisplay][currencySign];\n            break;\n        }\n        case 'decimal':\n            patterns = slots.decimal;\n            break;\n    }\n    var notation = getInternalSlot(__INTERNAL_SLOT_MAP__, numberFormat, 'notation');\n    var displayNotation = 'standard';\n    if (!isNaN(x) && isFinite(x)) {\n        if (notation === 'scientific' || notation === 'engineering') {\n            displayNotation = 'scientific';\n        }\n        else if (exponent !== 0) {\n            invariant(notation === 'compact', 'notation must be compact');\n            var compactDisplay = getInternalSlot(__INTERNAL_SLOT_MAP__, numberFormat, 'compactDisplay');\n            if (compactDisplay === 'short') {\n                displayNotation = 'compactShort';\n            }\n            else {\n                invariant(compactDisplay === 'long', 'compactDisplay must be long');\n                displayNotation = 'compactLong';\n            }\n        }\n    }\n    var signDisplay = getInternalSlot(__INTERNAL_SLOT_MAP__, numberFormat, 'signDisplay');\n    var signPattern = patterns[signDisplay][displayNotation];\n    var pattern;\n    if (signDisplay === 'never') {\n        pattern = signPattern.zeroPattern;\n    }\n    else if (signDisplay === 'auto') {\n        if (objectIs(x, 0) || x > 0 || isNaN(x)) {\n            pattern = signPattern.zeroPattern;\n        }\n        else {\n            pattern = signPattern.negativePattern;\n        }\n    }\n    else if (signDisplay === 'always') {\n        if (objectIs(x, 0) || x > 0 || isNaN(x)) {\n            pattern = signPattern.positivePattern;\n        }\n        else {\n            pattern = signPattern.negativePattern;\n        }\n    }\n    else {\n        invariant(signDisplay === 'exceptZero', 'signDisplay must be exceptZero');\n        if (objectIs(x, 0) || isNaN(x)) {\n            pattern = signPattern.zeroPattern;\n        }\n        else if (x > 0 || objectIs(x, +0)) {\n            pattern = signPattern.positivePattern;\n        }\n        else {\n            pattern = signPattern.negativePattern;\n        }\n    }\n    return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n    return rules[pl.select(x)] || rules.other;\n}\nfunction toNumeric(val) {\n    if (typeof val === 'bigint') {\n        return val;\n    }\n    return toNumber(val);\n}\nfunction toNumber(val) {\n    if (val === undefined) {\n        return NaN;\n    }\n    if (val === null) {\n        return +0;\n    }\n    if (typeof val === 'boolean') {\n        return val ? 1 : +0;\n    }\n    if (typeof val === 'number') {\n        return val;\n    }\n    if (typeof val === 'symbol' || typeof val === 'bigint') {\n        throw new TypeError('Cannot convert symbol/bigint to number');\n    }\n    return Number(val);\n}\ntry {\n    // IE11 does not have Symbol\n    if (typeof Symbol !== 'undefined') {\n        Object.defineProperty(UnifiedNumberFormat.prototype, Symbol.toStringTag, {\n            value: 'Object',\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    // test262/test/intl402/NumberFormat/name.js\n    Object.defineProperty(UnifiedNumberFormat, 'name', {\n        value: 'NumberFormat',\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n    // https://github.com/tc39/test262/blob/master/test/intl402/NumberFormat/constructor/length.js\n    Object.defineProperty(UnifiedNumberFormat.prototype.constructor, 'length', {\n        value: 0,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n    // https://github.com/tc39/test262/blob/master/test/intl402/NumberFormat/constructor/supportedLocalesOf/length.js\n    Object.defineProperty(UnifiedNumberFormat.supportedLocalesOf, 'length', {\n        value: 1,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n}\ncatch (e) {\n    // Meta fix so we're test262-compliant, not important\n}\n"],"names":["invariant","condition","message","Err","Error","toObject","arg","TypeError","Object","getOption","opts","prop","type","values","fallback","value","undefined","Boolean","String","filter","val","length","RangeError","defaultNumberOption","min","max","Number","isNaN","Math","floor","setInternalSlot","map","pl","field","_a","setMultiInternalSlots","props","get","set","create","slots","assign","getInternalSlot","getMultiInternalSlots","fields","_i","arguments","reduce","all","f","setNumberFormatDigitOptions","internalSlotMap","mnfdDefault","mxfdDefault","notation","mnid","options","property","minimum","maximum","getNumberOption","mnfd","minimumFractionDigits","mxfd","maximumFractionDigits","mnsd","minimumSignificantDigits","mxsd","maximumSignificantDigits","objectIs","x","y","is","getCanonicalLocales","locales","Intl","NumberFormat","supportedLocalesOf","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","__assign","t","s","i","n","call","apply","createResolveLocale","getDefaultLocale","lookupMatcher","availableLocales","requestedLocales","result","locale","requestedLocales_1","noExtensionLocale","replace","UNICODE_EXTENSION_SEQUENCE_REGEX","availableLocale","bestAvailableLocale","extension","slice","createLookupMatcher","bestFitMatcher","requestedLocales_2","createBestFitMatcher","relevantExtensionKeys","localeData","r","foundLocale","localeMatcher","dataLocale","supportedExtension","relevantExtensionKeys_1","key","foundLocaleData","keyLocaleData","isArray","supportedExtensionAddition","requestedValue","unicodeExtensionValue","indexOf","optionsValue","privateIndex","size","searchValue","pos","start","end","k","done","e","candidate","lastIndexOf","lookupSupportedLocales","subset","requestedLocales_3","push","_super","MissingLocaleDataError","_this","unpackData","reducer","localeHierarchy","aliases","parentLocales","results","parentLocale","localeParts","split","join","getLocaleHierarchy","dataToMerge","l","data","reverse","InternalSlotToken","logBase10","fraction","exponent","toRawFixed","minFraction","maxFraction","int","exactSolve","pow","roundDown","roundUp","ceil","xFinal","m","toString","repeat","a","cut","formattedString","roundedNumber","integerDigitsCount","toRawPrecision","minPrecision","maxPrecision","times","arr","CURRENCY_DISPLAYS","SIGN_DISPLAYS","SPECIAL_NUMBER_HACK","UNIT_DISPLAYS","CURRENCY_SYMBOL_REGEX","extractDecimalFormatILD","keys","num","pattern","trim","other","extractLDMLPluralRuleMap","rule","NUMBER_PATTERN","SCIENTIFIC_SLOT","number","scientificSeparator","scientificExponent","DUMMY_PATTERN","extractSignPattern","plusSign","minusSign","percentSign","positivePattern","negativePattern","zeroPattern","alwaysPositivePattern","includes","always","exceptZero","never","auto","produceSignPattern","dummySignPattern","scientificSignPattern","extractCompactSymbol","slotToken","compactSymbol","compactUnit","INSERT_BEFORE_PATTERN_REGEX","INSERT_AFTER_PATTERN_REGEX","S_UNICODE_REGEX","extractStandardCurrencyPattern","currencyStandardPattern","currencyUnitPattern","currencyShortPattern","decimalShortPattern","decimalLongPattern","currencyDisplay","standardPattern","scientificPattern","compactShortPattern","compactLongPattern","STANDARD_PATTERN_REGEX","_","currencyName","compactName","signDisplay","standard","scientific","compactShort","compactLong","extractAccountingCurrencyPattern","currencyAccountingPattern","replaceCurrencySymbolWithToken","currency","insertBetween","currencyToken","test","shouldInsertAfter","shouldInsertBefore","generateUnitPatternPayload","unitPatternStr","display","compactShortDecimalPattern","compactLongDecimalPattern","unitToken","unitName","unitSymbol","unitNarrowSymbol","standardUnitPatternStr","scientificUnitPatternStr","compactShortUnitPatternStr","compactLongUnitPatternStr","generateContinuousILND","startChar","startCharCode","charCodeAt","fromCharCode","ILND","arab","arabext","bali","beng","deva","fullwide","gujr","guru","khmr","knda","laoo","latn","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt","hanidec","extractPatterns","units","currencies","numbers","numberingSystem","unit","_b","decimal","compactShortSignPattern","short","compactLongSignPattern","long","extractDecimalPattern","percent","percentSignPattern","scientificPercentSignPattern","extractPercentPattern","u","unitData","patterns","UNIT_DISPLAYS_1","unitDisplay","extractUnitPatternForUnit","c","currencySpacing","beforeInsertBetween","unitPattern","accounting","currencySymbol","symbol","currencyNarrowSymbol","narrow","standardCurrencyPattern","currencyCode","resolvedCurrency","extractCurrencyPatternForCurrency","__spreadArrays","il","j","jl","RESOLVED_OPTIONS_KEYS","SHORTENED_SACTION_UNITS","NOT_A_Z_REGEX","__INTERNAL_SLOT_MAP__","WeakMap","initializeNumberFormat","nf","opt","matcher","UnifiedNumberFormat","ildData","nu","ild","symbols","currencySymbols","code","displayName","unitSymbols","extractILD","style","str","toUpperCase","isWellFormedCurrencyCode","currencySign","toLowerCase","isWellFormedUnitIdentifier","setNumberFormatUnitOptions","cDigits","currencyDigitsData","currencyDigits","compactDisplay","useGrouping","format","formatToParts","formattedX","NaN","toNumber","toNumeric","nan","isFinite","numberFormat","magnitude","computeExponentForMagnitude","formatNumberToString","computeExponent","formatNumberResult","infinity","displayNotation","signPattern","getNumberFormatPattern","patternParts_1","part","Infinity","replacementTable","replacedDigits","n_1","digit","decimalSepIndex","integer","groupSepSymbol","group","groups","integerGroup","pop","compactData","selectPlural","exponential","exponentResult","mu","cd","resolvedOptions","ro","RESOLVED_OPTIONS_KEYS_1","supportedLocales","__addLocaleData","data_1","datum","availableLocales_1","__defaultLocale","polyfilled","PluralRules","bind","isNegative","roundingType","minimumIntegerDigits","string","thresholdMap","thresholds","rules","select","Symbol","defineProperty","toStringTag","writable","enumerable","configurable"],"mappings":"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"}