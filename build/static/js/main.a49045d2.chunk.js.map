{"version":3,"sources":["utils/analytics.js","utils/sentry.js","contexts/IntlContext.jsx","utils/locales.js","components/LanguageUpdate.jsx","components/Headers.jsx","components/Footers.jsx","components/Alert.jsx","components/BaseGame.jsx","components/ValueSlider.jsx","components/BetSize.jsx","components/FlipButton.jsx","utils/etheroll-abi.js","utils/etheroll-contract.js","components/CoinFlipRecap.jsx","components/Address.jsx","components/Transaction.jsx","components/CoinFlipTransactions.jsx","components/CoinFlip.jsx","components/ContractInfo.jsx","components/ChanceOfWinning.jsx","components/RollUnderRecap.jsx","components/RollButton.jsx","components/Transactions.jsx","components/RollUnder.jsx","components/MetaMaskLink.jsx","utils/get-web3.js","components/Container.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["setupGA","ReactGA","initialize","process","pageview","window","location","pathname","search","setupSentry","Sentry","dsn","release","version","IntlContext","React","createContext","IntlContextProvider","_ref","children","_React$useState","useState","_React$useState2","Object","slicedToArray","locale","setLocale","react_default","a","createElement","Provider","value","messages","en","cn","es","fr","ru","vn","locales","keys","DropdownItem","text","onClick","className","type","DropdownMenu","_ref2","items","aria-labelledby","map","item","LanguageUpdate_DropdownItem","key","LanguageUpdate","_React$useContext","useContext","_React$useContext2","id","data-toggle","aria-haspopup","aria-expanded","toUpperCase","LanguageUpdate_DropdownMenu","newLocale","Logo","href","HamburgerBtn","data-target","aria-controls","aria-label","NavSections","NavLink","to","exact","activeClassName","components_message","defaultMessage","target","rel","components_LanguageUpdate","Headers","Headers_Logo","Headers_HamburgerBtn","Headers_NavSections","Footers","Alert","classType","message","concat","role","defaultProps","onRollClick","accountAddress","rollUnder","contract","betSize","toWei","toString","web3Contract","methods","playerRollDice","send","from","then","result","console","log","JSON","stringify","ValueSlider","updateValue","step","min","max","addonText","toFixedDigits","addon","formattedValue","toFixed","onChange","e","Number","Slider_default","BetSize","updateBetSize","components_ValueSlider","Button","isDisabled","disabled","FlipButton","defineMessages","intl","useIntl","FlipButton_Button","formatMessage","etherollAbi","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","Networks","freeze","mainnet","morden","ropsten","rinkeby","contractAddresses","_contractAddresses","defineProperty","etherscanUrls","_etherscanUrls","getProfit","winningChances","rawPayout","getPayout","netPayout","Math","EtherollContract","web3","address","classCallCheck","this","abi","eth","Contract","callback","_this","getBlockNumber","error","blockNumber","options","fromBlock","toBlock","getPastEvents","getTransactionLogs","mergedLogs","logBetEvents","logResultEvents","findLogResultEventBylogBetEvent","logBetEvent","find","logResultEvent","returnValues","BetID","mergeLogs","filter","evnt","event","CoinFlipRecap","profit","values","Address","network","url","Transaction","hash","MergedLog","mergedLog","playerNumber","PlayerNumber","valueEth","coinResult","alertClass","diceResult","DiceResult","playerWon","Value","pow","components_Address","PlayerAddress","components_Transaction","transactionHash","TransactionsFilterButtons","Transactions","_ref3","transactionsElems","transactions","transaction","slice","reverse","CoinFlipTransactions_MergedLog","CoinFlipTransactions_TransactionsFilterButtons","CoinFlip","props","filterTransactions","filteredTransactions","minBet","maxBet","updateState","onRollClickProps","rollDisabled","react","components_BetSize","components_CoinFlipRecap","components_FlipButton","CoinFlipTransactions","transactionsFilter","ContractInfo","accountBalance","contractAddress","contractBalance","contractAddr","contractBalanceBlock","contractAddressBlock","accountAddr","accountBalanceBlock","accountAddressBlock","ChanceOfWinning","chances","updateChances","RollUnderRecap","RollButton","RollButton_Button","sign","Transactions_MergedLog","Transactions_TransactionsFilterButtons","RollUnder","minChances","maxChances","components_ChanceOfWinning","components_RollUnderRecap","components_RollButton","components_Transactions","MetaMaskLink","getWeb3","Promise","resolve","reject","addEventListener","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","ethereum","Web3","enable","t0","currentProvider","Error","stop","showMessage","updateAlertDict","showFetchContractInfoWarning","showWarningMessage","optionalMessage","getAccountsCallback","updateAccountAddress","updateAccountBalance","accounts","length","getBalance","balance","fromWei","getAccountBalanceCallback","allTransactions","updateFilteredTransactions","updateTransactionsFilter","toLowerCase","Container","possibleConstructorReturn","getPrototypeOf","call","state","alertDict","onWeb3","bind","assertThisInitialized","initWeb3","clearInterval","getTransactionsIntervalId","_this2","net","getId","_this2$state","getTransactionsAlias","updateAllTransactions","getMergedTransactionLogs","getTransactions","setInterval","setState","minBetWei","minBetCallback","minNumber","minNumberCallback","maxNumber","maxNumberCallback","getAccounts","_this3","metamaskLink","components_MetaMaskLink","_this4","_this5","_this$state","gameProps","contractProps","components_Alert","components_ContractInfo","description","Route","path","render","components_RollUnder","components_CoinFlip","Component","App","HashRouter","provider","components_Headers","components_Container","components_Footers","Boolean","hostname","match","ReactDOM","contexts_IntlContext","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a49045d2.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\n\nconst fireTracking = () => (\n  ReactGA.pageview(window.location.pathname + window.location.search)\n);\n\nconst setupGA = () => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  ReactGA.initialize(process.env.REACT_APP_ANALYTICS_ID);\n  fireTracking();\n};\n\nexport default setupGA;\n","import * as Sentry from '@sentry/browser';\nimport { version } from '../../package.json';\n\nconst setupSentry = () => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    release: version,\n  });\n};\n\nexport default setupSentry;\n","import React from 'react';\nimport { element } from 'prop-types';\n\n\nexport const IntlContext = React.createContext();\n\nconst IntlContextProvider = ({ children }) => {\n  const [locale, setLocale] = React.useState('en');\n  return (\n    <IntlContext.Provider value={[locale, setLocale]}>\n      {children}\n    </IntlContext.Provider>\n  );\n};\nIntlContextProvider.propTypes = {\n  children: element.isRequired,\n};\n\nexport default IntlContextProvider;\n","import messagesCn from '../translations/cn.json';\nimport messagesEs from '../translations/es.json';\nimport messagesFr from '../translations/fr.json';\nimport messagesRu from '../translations/ru.json';\nimport messagesVn from '../translations/vn.json';\n\n\nconst messages = {\n  en: null,\n  cn: messagesCn,\n  es: messagesEs,\n  fr: messagesFr,\n  ru: messagesRu,\n  vn: messagesVn,\n};\nconst locales = Object.keys(messages);\n\nexport { messages, locales };\n","import React from 'react';\nimport { arrayOf, func, string } from 'prop-types';\nimport { IntlContext } from '../contexts/IntlContext';\nimport { locales } from '../utils/locales';\n\nconst DropdownItem = ({ text, onClick }) => (\n  <button className=\"dropdown-item\" type=\"button\" onClick={() => onClick(text)}>{text}</button>\n);\nDropdownItem.propTypes = {\n  text: string.isRequired,\n  onClick: func.isRequired,\n};\n\nconst DropdownMenu = ({ items, onClick }) => (\n  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n    {items.map(item => <DropdownItem text={item} onClick={onClick} key={item} />)}\n  </div>\n);\nDropdownMenu.propTypes = {\n  items: arrayOf(string).isRequired,\n  onClick: func.isRequired,\n};\n\nconst LanguageUpdate = () => {\n  const [locale, setLocale] = React.useContext(IntlContext);\n\n  return (\n    <li className=\"nav-item dropdown\">\n      <button\n        className=\"nav-link btn button-link dropdown-toggle\"\n        id=\"navbarDropdown\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        type=\"button\"\n      >\n        <i className=\"fas fa-flag\" />\n        &nbsp;\n        {locale.toUpperCase()}\n      </button>\n      <DropdownMenu\n        items={locales}\n        onClick={newLocale => setLocale(newLocale)}\n      />\n    </li>\n  );\n};\n\nexport default LanguageUpdate;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\nimport LanguageUpdate from './LanguageUpdate';\n\nconst Logo = () => (\n  <a className=\"navbar-brand\" href=\"/\">\n    <i className=\"fas fa-dice-d20\" />\n    {' Etheroll'}\n  </a>\n);\n\nconst HamburgerBtn = () => (\n  <button\n    className=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarCollapse\"\n    aria-controls=\"navbarCollapse\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span className=\"navbar-toggler-icon\" />\n  </button>\n);\n\nconst NavSections = () => (\n  <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/\" exact activeClassName=\"active\">\n          <i className=\"fas fa-home\" />\n          &nbsp;\n          <FormattedMessage\n            id=\"headers.navsections.navlink.home\"\n            defaultMessage=\"Home\"\n          />\n          <span className=\"sr-only\">(current)</span>\n        </NavLink>\n      </li>\n      \n      <li className=\"nav-item\">\n        <a\n          className=\"nav-link\"\n          href=\"https://github.com/AndreMiras/etheroll\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fab fa-github-alt\" />\n          &nbsp;\n          <FormattedMessage\n            id=\"headers.navsections.navlink.about\"\n            defaultMessage=\"About\"\n          />\n        </a>\n      </li>\n      <LanguageUpdate />\n    </ul>\n  </div>\n);\n\nconst Headers = () => (\n  <header>\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <Logo />\n      <HamburgerBtn />\n      <NavSections />\n    </nav>\n  </header>\n);\n\nexport default Headers;\n","import React from 'react';\nimport './css/Footers.css';\nimport { version } from '../../package.json';\n\nconst Footers = () => (\n  <footer className=\"Footers d-none d-md-block\">\n    <div className=\"container\">\n      <span className=\"text-muted\">\n          Copyright (c) - Etheroll v\n        {version}\n      </span>\n    </div>\n  </footer>\n);\n\nexport default Footers;\n","import React from 'react';\nimport { string, node, oneOfType } from 'prop-types';\n\nconst Alert = ({ classType, message }) => (\n  message\n    ? (\n      <div className={`alert alert-${classType}`} role=\"alert\">\n        {message}\n      </div>\n    )\n    : null\n);\nAlert.propTypes = {\n  classType: string,\n  message: oneOfType([string, node]),\n};\nAlert.defaultProps = {\n  classType: 'primary',\n  message: null,\n};\n\nexport default Alert;\n","import { toWei } from 'web3-utils';\n\nconst onRollClick = ({\n  accountAddress, rollUnder, contract, betSize,\n}) => {\n  const value = toWei(betSize.toString(), 'ether');\n  contract.web3Contract.methods.playerRollDice(rollUnder).send({\n    from: accountAddress,\n    value,\n  }).then(result => console.log(JSON.stringify(result)));\n};\n\nexport default onRollClick;\n","import React from 'react';\nimport Slider from 'rc-slider/lib/Slider';\nimport { func, number, string } from 'prop-types';\nimport 'rc-slider/assets/index.css';\n\n\nconst ValueSlider = ({\n  value, updateValue, step, min, max, addonText, toFixedDigits,\n}) => {\n  const addon = (addonText !== null) ? (\n    <div className=\"input-group-append\">\n      <span className=\"input-group-text text-monospace\">{addonText}</span>\n    </div>\n  ) : null;\n  const formattedValue = toFixedDigits === null ? value : value.toFixed(toFixedDigits);\n  return (\n    <div className=\"row\">\n      <div className=\"input-group col-sm-3 col-lg-2\">\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          onChange={e => updateValue(Number(e.target.value))}\n          value={formattedValue}\n        />\n        {addon}\n      </div>\n      <div className=\"col\">\n        <Slider onChange={updateValue} value={value} step={step} min={min} max={max} />\n      </div>\n    </div>\n  );\n};\nValueSlider.propTypes = {\n  value: number.isRequired,\n  updateValue: func.isRequired,\n  step: number,\n  min: number,\n  max: number,\n  addonText: string,\n  toFixedDigits: number,\n};\nValueSlider.defaultProps = {\n  step: 1,\n  min: 0,\n  max: 100,\n  addonText: null,\n  toFixedDigits: null,\n};\n\nexport default ValueSlider;\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport ValueSlider from './ValueSlider';\n\nconst BetSize = ({\n  betSize, min, max, updateBetSize,\n}) => (\n  <div className=\"form-group\">\n    <b>\n      <FormattedMessage\n        id=\"betsize.betsize\"\n        defaultMessage=\"Bet size\"\n      />\n    </b>\n    <ValueSlider value={betSize} updateValue={updateBetSize} step={0.05} min={min} max={max} addonText=\"ETH\" toFixedDigits={2} />\n  </div>\n);\nBetSize.propTypes = {\n  betSize: number.isRequired,\n  min: number,\n  max: number,\n  updateBetSize: func.isRequired,\n};\nBetSize.defaultProps = {\n  min: 0,\n  max: 10,\n};\n\nexport default BetSize;\n","import React from 'react';\nimport { bool, func, string } from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst Button = ({ isDisabled, onClick, text }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg col-md-3\"\n    disabled={isDisabled}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\nButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n  text: string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nconst FlipButton = ({ isDisabled, onClick }) => {\n  // https://github.com/leesx/react-intl-demo2018/blob/0cd88df/docs/react-intl-corner-cases.md\n  const messages = defineMessages({\n    text: {\n      id: 'flipbutton.text',\n      defaultMessage: 'Flip Head',\n    },\n  });\n  const intl = useIntl();\n  return (\n    <Button text={intl.formatMessage(messages.text)} isDisabled={isDisabled} onClick={onClick} />);\n};\nFlipButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n};\nFlipButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default FlipButton;\n","const etherollAbi = [{\"constant\":false,\"inputs\":[{\"name\":\"newCallbackGasPrice\",\"type\":\"uint256\"}],\"name\":\"ownerSetCallbackGasPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWeiWon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxProfitAsPercentOfHouse\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newHouseEdge\",\"type\":\"uint256\"}],\"name\":\"ownerSetHouseEdge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"myid\",\"type\":\"bytes32\"},{\"name\":\"result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutsPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"ownerSetTreasury\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"myid\",\"type\":\"bytes32\"},{\"name\":\"result\",\"type\":\"string\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addressToCheck\",\"type\":\"address\"}],\"name\":\"playerGetPendingTxByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newContractBalanceInWei\",\"type\":\"uint256\"}],\"name\":\"ownerUpdateContractBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxProfitDivisor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPayoutStatus\",\"type\":\"bool\"}],\"name\":\"ownerPausePayouts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMaxProfitAsPercent\",\"type\":\"uint256\"}],\"name\":\"ownerSetMaxProfitAsPercentOfHouse\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWeiWagered\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMinimumBet\",\"type\":\"uint256\"}],\"name\":\"ownerSetMinBet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"ownerPauseGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasForOraclize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sendTo\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerTransferEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"playerWithdrawPendingTransactions\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomQueryID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gamePaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"originalPlayerBetId\",\"type\":\"bytes32\"},{\"name\":\"sendTo\",\"type\":\"address\"},{\"name\":\"originalPlayerProfit\",\"type\":\"uint256\"},{\"name\":\"originalPlayerBetValue\",\"type\":\"uint256\"}],\"name\":\"ownerRefundPlayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSafeGasToOraclize\",\"type\":\"uint32\"}],\"name\":\"ownerSetOraclizeSafeGas\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerkill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"houseEdge\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rollUnder\",\"type\":\"uint256\"}],\"name\":\"playerRollDice\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"houseEdgeDivisor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPendingPayouts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"BetID\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"PlayerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"RewardValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ProfitValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"BetValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"PlayerNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"RandomQueryID\",\"type\":\"uint256\"}],\"name\":\"LogBet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ResultSerialNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"BetID\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"PlayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"PlayerNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"DiceResult\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Status\",\"type\":\"int256\"},{\"indexed\":false,\"name\":\"Proof\",\"type\":\"bytes\"}],\"name\":\"LogResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"BetID\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"PlayerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"RefundValue\",\"type\":\"uint256\"}],\"name\":\"LogRefund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"SentToAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"AmountTransferred\",\"type\":\"uint256\"}],\"name\":\"LogOwnerTransfer\",\"type\":\"event\"}];\n\n\nexport default etherollAbi;\n","import etherollAbi from './etheroll-abi';\n\n// TODO require vs import\n// const SolidityEvent = require('web3/lib/web3/event.js');\n\nconst HOUSE_EDGE = 1 / 100.0;\n\nconst Networks = Object.freeze({ mainnet: 1, morden: 2, ropsten: 3, rinkeby:4});\n\nconst contractAddresses = {\n  [Networks.mainnet]: '0xf478c8Bc5448236d52067c96F8f4C8376E62Fa8f',\n  [Networks.ropsten]: '0xe12c6dEb59f37011d2D9FdeC77A6f1A8f3B8B1e8',\n  //[Networks.rinkeby]: '0xdF0A0a6f20DB04D3219a7DA6D42Ed9FE63EA6AE8'\n  //[Networks.ropsten]: '0xCDa35b320db29C42ba3A36aC448D4C963AD2CcAe',\n  [Networks.rinkeby]: '0xdF0A0a6f20DB04D3219a7DA6D42Ed9FE63EA6AE8' //my contract- interactions work!\n\n};\n\nconst etherscanUrls = {\n  [Networks.mainnet]: 'https://etherscan.io',\n  [Networks.ropsten]: 'https://ropsten.etherscan.io',\n  [Networks.rinkeby]: 'https://rinkeby.etherscan.io',\n};\n\n\nconst getPayout = (betSize, winningChances) => (\n  100 / winningChances * betSize\n);\n\nconst cutHouseEdge = payout => (\n  payout * (1 - HOUSE_EDGE)\n);\n\nconst getProfit = (betSize, winningChances) => {\n  if (winningChances === 0) {\n    return 0;\n  }\n  const rawPayout = getPayout(betSize, winningChances);\n  const netPayout = cutHouseEdge(rawPayout);\n\n  return Math.max(netPayout - betSize, 0);\n};\n\n\n// Merges bet logs (LogBet) with bet results logs (LogResult).\nconst mergeLogs = (logBetEvents, logResultEvents) => {\n  const findLogResultEventBylogBetEvent = logBetEvent => (\n    logResultEvents.find(logResultEvent => (\n      logResultEvent.returnValues.BetID === logBetEvent.returnValues.BetID\n    ))\n  );\n\n  return logBetEvents.map(logBetEvent => ({\n    logBetEvent,\n    logResultEvent: findLogResultEventBylogBetEvent(logBetEvent),\n  }));\n};\n\nclass EtherollContract {\n  constructor(web3, address) {\n    this.web3 = web3;\n    this.address = address;\n    this.abi = etherollAbi;\n    this.web3Contract = new web3.eth.Contract(etherollAbi, address);\n  }\n\n  // callback(error, result)\n  getTransactionLogs(callback) {\n    this.web3.eth.getBlockNumber((error, blockNumber) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const { address } = this;\n        const toBlock = blockNumber;\n        const fromBlock = toBlock - 100;\n        const options = {\n          address,\n          fromBlock,\n          toBlock,\n        };\n        this.web3Contract.getPastEvents('allEvents', options, callback);\n      }\n    });\n  }\n\n  // callback(error, result)\n  getMergedTransactionLogs(callback) {\n    this.getTransactionLogs((error, result) => {\n      if (error) {\n        console.log(error);\n      } else {\n        const logBetEvents = result.filter(evnt => evnt.event === 'LogBet');\n        const logResultEvents = result.filter(evnt => evnt.event === 'LogResult');\n        const mergedLogs = mergeLogs(logBetEvents, logResultEvents);\n        callback(error, mergedLogs);\n      }\n    });\n  }\n}\n\n\nexport {\n  EtherollContract, etherscanUrls, getProfit, mergeLogs, Networks, contractAddresses,\n};\n","import React from 'react';\nimport { number } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nconst CoinFlipRecap = ({ betSize }) => {\n  const chances = 50;\n  const profit = getProfit(betSize, chances);\n  return (\n    <p>\n      <FormattedMessage\n        id=\"coinfliprecap.flip-head-with-a-wager\"\n        defaultMessage={'Flip Head with a wager of {betSize} for a profit of {profit}'}\n        values={{ betSize: betSize.toFixed(2), profit: profit.toFixed(2) }}\n      />\n    </p>\n  );\n};\nCoinFlipRecap.propTypes = {\n  betSize: number.isRequired,\n};\n\nexport default CoinFlipRecap;\n","import React from 'react';\nimport { string, number } from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nconst Address = ({ address, network }) => {\n  const url = `${etherscanUrls[network]}/address/${address}`;\n  return <a href={url} className=\"text-monospace\">{address}</a>;\n};\nAddress.propTypes = {\n  address: string.isRequired,\n  network: number.isRequired,\n};\n\nexport default Address;\n","import React from 'react';\nimport { string, number } from 'prop-types';\nimport { etherscanUrls } from '../utils/etheroll-contract';\n\n\nconst Transaction = ({ hash, network }) => {\n  const url = `${etherscanUrls[network]}/tx/${hash}`;\n  return <a href={url}>{hash}</a>;\n};\nTransaction.propTypes = {\n  hash: string.isRequired,\n  network: number.isRequired,\n};\n\nexport default Transaction;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nconst MergedLog = ({ network, mergedLog }) => {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  // const playerSide = 'Head';\n  let valueEth = '?';\n  let coinResult = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    const diceResult = Number(logResultEvent.returnValues.DiceResult);\n    coinResult = diceResult < 51 ? 'Head' : 'Tail';\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{coinResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.wallet\"\n            defaultMessage=\"Wallet:\"\n          />\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.transaction\"\n            defaultMessage=\"Transaction:\"\n          />\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n};\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nconst TransactionsFilterButtons = ({ onClick }) => (\n  <nav className=\"nav\">\n    <button\n      type=\"button\"\n      className=\"btn btn-link active\"\n      onClick={() => onClick('#all-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.all-transactions\"\n        defaultMessage=\"All transactions\"\n      />\n    </button>\n    <button\n      type=\"button\"\n      className=\"btn btn-link\"\n      onClick={() => onClick('#my-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.my-transactions\"\n        defaultMessage=\"My transactions\"\n      />\n    </button>\n  </nav>\n);\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nconst Transactions = ({ network, onClick, transactions }) => {\n  const coinflipTransactions = transactions.filter(transaction => (\n    Number(transaction.logBetEvent.returnValues.PlayerNumber) === 51\n  ));\n  const reversedTransactions = coinflipTransactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n};\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React, { Fragment } from 'react';\nimport {\n  arrayOf, func, number, shape, string,\n} from 'prop-types';\nimport onRollClick from './BaseGame';\nimport BetSize from './BetSize';\nimport FlipButton from './FlipButton';\nimport CoinFlipRecap from './CoinFlipRecap';\nimport CoinFlipTransactions from './CoinFlipTransactions';\n\n\nconst CoinFlip = (props) => {\n  const {\n    accountAddress, betSize, contract,\n    filterTransactions, filteredTransactions, minBet, maxBet, network,\n    updateState,\n  } = props;\n  const rollUnder = 51;\n  const onRollClickProps = {\n    accountAddress, rollUnder, contract, betSize,\n  };\n  const rollDisabled = accountAddress === null;\n  return (\n    <Fragment>\n      <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={updateState('betSize')} />\n      <CoinFlipRecap betSize={betSize} />\n      <FlipButton isDisabled={rollDisabled} onClick={() => onRollClick(onRollClickProps)} />\n      <CoinFlipTransactions\n        network={network}\n        onClick={transactionsFilter => filterTransactions(transactionsFilter)}\n        transactions={filteredTransactions}\n      />\n    </Fragment>\n  );\n};\n\nCoinFlip.propTypes = {\n  accountAddress: string,\n  betSize: number.isRequired,\n  contract: shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  }),\n  filterTransactions: func.isRequired,\n  filteredTransactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n  minBet: number.isRequired,\n  maxBet: number.isRequired,\n  network: number.isRequired,\n  updateState: func.isRequired,\n};\nCoinFlip.defaultProps = {\n  accountAddress: null,\n  contract: null,\n};\n\nexport default CoinFlip;\n","import React from 'react';\nimport { number, string } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\n\nconst ContractInfo = ({\n  accountAddress, accountBalance, contractAddress, contractBalance, network,\n}) => {\n  const contractAddr = <Address network={network} address={contractAddress} />;\n\n  const contractBalanceBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      <i className=\"far fa-file-code\" />\n      &nbsp;\n      <FormattedMessage\n        id=\"contractinfo.contract\"\n        defaultMessage={'Contract ({contractBalance} ETH)'}\n        values={{ contractBalance: contractBalance.toFixed(2) }}\n      />\n    </div>\n  );\n\n  const contractAddressBlock = (\n    <div className=\"col-12 d-none d-sm-block\">\n      {contractAddr}\n    </div>\n  );\n  const accountAddr = (accountAddress !== null)\n    ? <Address network={network} address={accountAddress} />\n    : (\n      <span>\n        <FormattedMessage\n          id=\"contractinfo.not-connected\"\n          defaultMessage=\"Not connected, please login to MetaMask\"\n        />\n      </span>\n    );\n\n  const accountBalanceBlock = (\n    <div className=\"col-lg-12\">\n      <i className=\"far fa-user\" />\n      &nbsp;\n      <FormattedMessage\n        id=\"contractinfo.account\"\n        defaultMessage={'Account ({accountBalance} ETH)'}\n        values={{ accountBalance: accountBalance.toFixed(2) }}\n      />\n    </div>\n  );\n\n  const accountAddressBlock = (\n    <div className=\"col-12\">\n      {accountAddr}\n    </div>\n  );\n\n  return (\n    <div className=\"row\">\n      {accountBalanceBlock}\n      {accountAddressBlock}\n      {contractBalanceBlock}\n      {contractAddressBlock}\n    </div>\n  );\n};\nContractInfo.propTypes = {\n  accountAddress: string,\n  accountBalance: number.isRequired,\n  contractAddress: string.isRequired,\n  contractBalance: number.isRequired,\n  network: number.isRequired,\n};\nContractInfo.defaultProps = {\n  accountAddress: null,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport { number, func } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport ValueSlider from './ValueSlider';\n\nconst ChanceOfWinning = ({\n  chances, min, max, updateChances,\n}) => (\n  <div className=\"form-group\">\n    <b>\n      <FormattedMessage\n        id=\"chanceofwinning.chanceofwinning\"\n        defaultMessage=\"Chance of winning\"\n      />\n    </b>\n    <ValueSlider\n      value={chances}\n      min={min}\n      max={max}\n      updateValue={updateChances}\n      addonText=\"&nbsp;%&nbsp;\"\n    />\n  </div>\n);\nChanceOfWinning.propTypes = {\n  chances: number.isRequired,\n  min: number,\n  max: number,\n  updateChances: func.isRequired,\n};\nChanceOfWinning.defaultProps = {\n  min: 0,\n  max: 100,\n};\n\nexport default ChanceOfWinning;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { number } from 'prop-types';\nimport { getProfit } from '../utils/etheroll-contract';\n\n\nconst RollUnderRecap = ({ betSize, value }) => {\n  const chances = value - 1;\n  const profit = getProfit(betSize, chances);\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <h3>\n          <FormattedMessage\n            id=\"rollunderrecap.roll-under\"\n            defaultMessage=\"Roll under\"\n          />\n        </h3>\n      </div>\n      <div className=\"col-6\">\n        <h3 className=\"text-right\">{value}</h3>\n      </div>\n      <div className=\"col-6\">\n        <FormattedMessage\n          id=\"rollunderrecap.with-a-wager-of\"\n          defaultMessage=\"With a wager of\"\n        />\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right mb-0\">\n          {betSize.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n      <div className=\"col-6\">\n        <FormattedMessage\n          id=\"rollunderrecap.for-a-profit-of\"\n          defaultMessage=\"For a profit of\"\n        />\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-right\">\n          {profit.toFixed(2)}\n          &nbsp;\n          ETH\n        </p>\n      </div>\n    </div>\n  );\n};\nRollUnderRecap.propTypes = {\n  betSize: number.isRequired,\n  value: number.isRequired,\n};\n\nexport default RollUnderRecap;\n","import React from 'react';\nimport { bool, func, string } from 'prop-types';\n\nconst Button = ({ isDisabled, onClick, text }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-primary btn-lg col-md-3\"\n    disabled={isDisabled}\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\nButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n  text: string.isRequired,\n};\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nconst RollButton = ({ isDisabled, onClick }) => (\n  <Button text=\"Roll\" isDisabled={isDisabled} onClick={onClick} />\n);\nRollButton.propTypes = {\n  isDisabled: bool,\n  onClick: func.isRequired,\n};\nRollButton.defaultProps = {\n  isDisabled: false,\n};\n\nexport default RollButton;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape,\n} from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Address from './Address';\nimport Transaction from './Transaction';\n\n\nconst MergedLog = ({ network, mergedLog }) => {\n  const { logBetEvent, logResultEvent } = mergedLog;\n  const playerNumber = Number(logBetEvent.returnValues.PlayerNumber);\n  let valueEth = '?';\n  let diceResult = '?';\n  let sign = '?';\n  let alertClass = 'secondary';\n  // resolved bet case\n  if (typeof logResultEvent !== 'undefined') {\n    diceResult = Number(logResultEvent.returnValues.DiceResult);\n    const playerWon = diceResult < playerNumber;\n    valueEth = (logResultEvent.returnValues.Value * (10 ** (-18))).toFixed(2);\n    sign = playerWon ? '<' : '>';\n    alertClass = playerWon ? 'success' : 'danger';\n  }\n  return (\n    <div className={`row d-inline-flex list-group-item list-group-item-${alertClass}`}>\n      <div className=\"col-sm-2 d-block\">\n        <h3>{diceResult}</h3>\n      </div>\n      <div className=\"col-10\">\n        <div className=\"w-100\">\n          {valueEth}\n          &nbsp;\n          ETH\n        </div>\n        <div className=\"w-100\">\n          {diceResult}\n          &nbsp;\n          {sign}\n          &nbsp;\n          {playerNumber}\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.wallet\"\n            defaultMessage=\"Wallet:\"\n          />\n          &nbsp;\n          <Address address={logBetEvent.returnValues.PlayerAddress.toString()} network={network} />\n        </div>\n        <div className=\"w-100\">\n          <FormattedMessage\n            id=\"merged-log.transaction\"\n            defaultMessage=\"Transaction:\"\n          />\n          &nbsp;\n          <Transaction hash={logBetEvent.transactionHash} network={network} />\n        </div>\n      </div>\n    </div>\n  );\n};\nMergedLog.propTypes = {\n  network: number.isRequired,\n  mergedLog: shape({\n    // TODO: seems completely ignored\n    todo: number,\n  }).isRequired,\n};\n\nconst TransactionsFilterButtons = ({ onClick }) => (\n  <nav className=\"nav\">\n    <button\n      type=\"button\"\n      className=\"btn btn-link active\"\n      onClick={() => onClick('#all-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.all-transactions\"\n        defaultMessage=\"All transactions\"\n      />\n    </button>\n    <button\n      type=\"button\"\n      className=\"btn btn-link\"\n      onClick={() => onClick('#my-transactions')}\n    >\n      <FormattedMessage\n        id=\"transactions-filter-buttons.my-transactions\"\n        defaultMessage=\"My transactions\"\n      />\n    </button>\n  </nav>\n);\nTransactionsFilterButtons.propTypes = {\n  onClick: func.isRequired,\n};\n\nconst Transactions = ({ network, onClick, transactions }) => {\n  const reversedTransactions = transactions.slice().reverse();\n  const transactionsElems = reversedTransactions.map(transaction => (\n    <MergedLog\n      key={transaction.logBetEvent.transactionHash}\n      network={network}\n      mergedLog={transaction}\n    />\n  ));\n  return (\n    <div className=\"card transactions\">\n      <div className=\"card-header\">\n        <TransactionsFilterButtons onClick={onClick} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"list-group\">{transactionsElems}</div>\n      </div>\n    </div>\n  );\n};\nTransactions.propTypes = {\n  network: number.isRequired,\n  onClick: func.isRequired,\n  transactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n};\n\n\nexport default Transactions;\n","import React from 'react';\nimport {\n  arrayOf, func, number, shape, string,\n} from 'prop-types';\nimport './css/RollUnder.css';\nimport onRollClick from './BaseGame';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport RollUnderRecap from './RollUnderRecap';\nimport RollButton from './RollButton';\nimport Transactions from './Transactions';\n\n\nconst RollUnder = (props) => {\n  const {\n    accountAddress, betSize, chances, contract,\n    filterTransactions, filteredTransactions, minBet, maxBet, minChances, maxChances, network,\n    updateState,\n  } = props;\n  const rollUnder = chances + 1;\n  const onRollClickProps = {\n    accountAddress, rollUnder, contract, betSize,\n  };\n  const rollDisabled = accountAddress === null;\n  return (\n    <div>\n      <form className=\"RollUnder\">\n        <BetSize betSize={betSize} min={minBet} max={maxBet} updateBetSize={updateState('betSize')} />\n        <ChanceOfWinning chances={chances} min={minChances} max={maxChances} updateChances={updateState('chances')} />\n        <RollUnderRecap value={rollUnder} betSize={betSize} />\n        <RollButton isDisabled={rollDisabled} onClick={() => onRollClick(onRollClickProps)} />\n      </form>\n      <Transactions\n        network={network}\n        onClick={transactionsFilter => filterTransactions(transactionsFilter)}\n        transactions={filteredTransactions}\n      />\n    </div>\n  );\n};\nRollUnder.propTypes = {\n  accountAddress: string,\n  betSize: number.isRequired,\n  chances: number.isRequired,\n  contract: shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  }),\n  filterTransactions: func.isRequired,\n  filteredTransactions: arrayOf(shape({\n    // TODO: seems completely ignored\n    // https://github.com/facebook/prop-types/issues/181\n    todo: number,\n  })).isRequired,\n  minBet: number.isRequired,\n  maxBet: number.isRequired,\n  minChances: number.isRequired,\n  maxChances: number.isRequired,\n  network: number.isRequired,\n  updateState: func.isRequired,\n};\nRollUnder.defaultProps = {\n  accountAddress: null,\n  contract: null,\n};\n\nexport default RollUnder;\n","import React from 'react';\n\nconst MetaMaskLink = () => (\n  <a\n    href=\"https://metamask.io/\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Meta Mask\n  </a>\n);\n\nexport default MetaMaskLink;\n","import Web3 from 'web3';\n\nconst getWeb3 = new Promise((resolve, reject) => {\n  window.addEventListener('load', async () => {\n    let web3;\n    if (window.ethereum) { // Modern dapp browsers...\n      web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n      } catch (error) {\n        console.error(error);\n      }\n    } else if (window.web3) { // Legacy dapp browsers...\n      web3 = new Web3(window.web3.currentProvider);\n    } else { // Non-dapp browsers...\n      reject(new Error('Non-Ethereum browser detected. Is MetaMask running?'));\n    }\n    const results = { web3 };\n    resolve(results);\n  });\n});\n\n\nexport default getWeb3;\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { fromWei } from 'web3-utils';\nimport Alert from './Alert';\nimport CoinFlip from './CoinFlip';\nimport ContractInfo from './ContractInfo';\nimport RollUnder from './RollUnder';\nimport BetSize from './BetSize';\nimport ChanceOfWinning from './ChanceOfWinning';\nimport MetaMaskLink from './MetaMaskLink';\nimport getWeb3 from '../utils/get-web3';\nimport {\n  EtherollContract, Networks, contractAddresses,\n} from '../utils/etheroll-contract';\n\n\nconst showMessage = (classType, message, updateAlertDict) => {\n  const alertDict = { classType, message };\n  updateAlertDict(alertDict);\n};\n\nconst showFetchContractInfoWarning = (showWarningMessage, optionalMessage) => {\n  const defaultMessage = \"Can't fetch contract info.\";\n  const message = (typeof optionalMessage === 'undefined') ? defaultMessage : optionalMessage;\n  showWarningMessage(message);\n};\n\nconst minBetCallback = (showWarningMessage, updateValue) => (error, minBetWei) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : (\n    updateValue(Number(fromWei(minBetWei, 'ether')))\n  );\n};\n\nconst minNumberCallback = (showWarningMessage, updateValue) => (error, minNumber) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : updateValue(minNumber - 1);\n};\n\nconst maxNumberCallback = (showWarningMessage, updateValue) => (error, maxNumber) => {\n  error ? showFetchContractInfoWarning(showWarningMessage) : updateValue(maxNumber - 1);\n};\n\nconst getBalanceCallback = (showWarningMessage, updateValue) => (error, balance) => {\n  // error can be null with the balance also null in rare cases\n  (error || balance === null) ? showFetchContractInfoWarning(\"Can't fetch contract balance.\") : (\n    updateValue(Number(fromWei(balance, 'ether')))\n  );\n};\n\nconst getAccountBalanceCallback = (showWarningMessage, updateValue) => (error, balance) => {\n  // error can be null with the balance also null in rare cases\n  (error || balance === null) ? showWarningMessage(\"Can't fetch account balance.\") : (\n    updateValue(Number(fromWei(balance, 'ether')))\n  );\n};\n\nconst getAccountsCallback = (\n  web3, showWarningMessage, updateAccountAddress, updateAccountBalance,\n) => (error, accounts) => {\n  if (error) {\n    const message = \"Can't retrieve accounts.\";\n    showWarningMessage(message);\n  } else {\n    const accountAddress = accounts.length === 0 ? null : accounts[0];\n    if (accountAddress !== null) {\n      web3.eth.getBalance(\n        accountAddress,\n        getAccountBalanceCallback(\n          showWarningMessage,\n          updateAccountBalance,\n        ),\n      );\n    }\n    updateAccountAddress(accountAddress);\n  }\n};\n\nconst filterTransactions = (\n  accountAddress, transactionsFilter, allTransactions,\n  updateFilteredTransactions, updateTransactionsFilter,\n) => {\n  let filteredTransactions = allTransactions.slice();\n  if (transactionsFilter === '#my-transactions') {\n    filteredTransactions = allTransactions.filter(transaction => (\n      transaction.logBetEvent.returnValues.PlayerAddress.toLowerCase()\n      === accountAddress.toLowerCase()\n    ));\n  }\n  updateFilteredTransactions(filteredTransactions);\n  updateTransactionsFilter(transactionsFilter);\n};\n\nconst getTransactions = (\n  contract, accountAddress, transactionsFilter,\n  updateAllTransactions, updateFilteredTransactions, updateTransactionsFilter,\n) => {\n  contract.getMergedTransactionLogs((error, result) => {\n    if (error) {\n      console.log(error);\n    } else {\n      const allTransactions = result;\n      updateAllTransactions(allTransactions);\n      filterTransactions(\n        accountAddress, transactionsFilter, allTransactions,\n        updateFilteredTransactions, updateTransactionsFilter,\n      );\n    }\n  });\n};\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertDict: {},\n      betSize: 0.1,\n      chances: 50,\n      minBet: BetSize.defaultProps.min,\n      maxBet: BetSize.defaultProps.max,\n      minChances: ChanceOfWinning.defaultProps.min,\n      maxChances: ChanceOfWinning.defaultProps.max,\n      accountAddress: null,\n      accountBalance: 0,\n      network: Networks.mainnet,\n      contract: null,\n      contractAddress: contractAddresses[Networks.mainnet],\n      contractBalance: 0,\n      // most recent transaction is last in the array\n      allTransactions: [],\n      filteredTransactions: [],\n      transactionsFilter: '#all-transactions',\n    };\n    this.onWeb3 = this.onWeb3.bind(this);\n    this.updateState = this.updateState.bind(this);\n    this.initWeb3();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.getTransactionsIntervalId);\n  }\n\n  /**\n   * Retrieves web3 and contract info, then sets the following states:\n   * - accountAddress\n   * - accountBalance\n   * - contract\n   * - contractAddress\n   * - contractBalance\n   * - minBet\n   * - maxBet (TODO)\n   * - maxChances\n   * - network\n   */\n  onWeb3(web3) {\n    const getIdCallback = (network) => {\n      const contractAddress = contractAddresses[network];\n      const contract = new EtherollContract(web3, contractAddress);\n      const pullIntervalSeconds = 10 * 1000;\n      const { showWarningMessage, updateState } = this;\n      const { transactionsFilter, accountAddress } = this.state;\n      const getTransactionsAlias = () => getTransactions(\n        contract, accountAddress, transactionsFilter,\n        updateState('allTransactions'), updateState('filteredTransactions'), updateState('transactionsFilter'),\n      );\n      // clearInterval() is in the componentWillUnmount()\n      this.getTransactionsIntervalId = setInterval(\n        () => getTransactionsAlias(), pullIntervalSeconds,\n      );\n      getTransactionsAlias();\n      this.setState({\n        network,\n        contract,\n        contractAddress,\n      });\n      contract.web3Contract.methods.minBet().call(\n        minBetCallback(\n          showWarningMessage, updateState('minBet'),\n        ),\n      );\n      contract.web3Contract.methods.minNumber().call(\n        minNumberCallback(\n          showWarningMessage, updateState('minChances'),\n        ),\n      );\n      contract.web3Contract.methods.maxNumber().call(\n        maxNumberCallback(\n          showWarningMessage, updateState('maxChances'),\n        ),\n      );\n      web3.eth.getBalance(\n        contractAddress,\n        getBalanceCallback(\n          showWarningMessage, updateState('contractBalance'),\n        ),\n      );\n      web3.eth.getAccounts(\n        getAccountsCallback(\n          web3, showWarningMessage, updateState('accountAddress'), updateState('accountBalance'),\n        ),\n      );\n    };\n    web3.eth.net.getId().then(getIdCallback);\n  }\n\n  initWeb3() {\n    const getWeb3CallbackOk = ({ web3 }) => {\n      this.onWeb3(web3);\n    };\n    const getWeb3CallbackError = () => {\n      const classType = 'danger';\n      const message = (\n        <Fragment>\n          <FormattedMessage\n            id=\"container.no-account-connected\"\n            defaultMessage={'No account connected, connect with a Web3-compatible wallet like {metamaskLink}'}\n            values={{ metamaskLink: <MetaMaskLink /> }}\n          />\n        </Fragment>\n      );\n      showMessage(classType, message, this.updateState('alertDict'));\n    };\n    getWeb3.then(getWeb3CallbackOk, getWeb3CallbackError);\n  }\n\n  showWarningMessage(message) {\n    const classType = 'warning';\n    showMessage(classType, message, this.updateState('alertDict'));\n  }\n\n  updateState(key) {\n    return (value) => {\n      this.setState({ [key]: value });\n    };\n  }\n\n  render() {\n    const {\n      alertDict, accountAddress, accountBalance, allTransactions, betSize, chances, contract,\n      contractAddress, contractBalance, filteredTransactions, maxBet, minBet, maxChances,\n      minChances, network, transactionsFilter,\n    } = this.state;\n\n    const gameProps = {\n      accountAddress,\n      betSize,\n      chances,\n      contract,\n      filteredTransactions,\n      transactionsFilter,\n      maxBet,\n      minBet,\n      maxChances,\n      minChances,\n      network,\n      updateState: this.updateState,\n      filterTransactions: filter => filterTransactions(\n        accountAddress, filter, allTransactions,\n        this.updateState('filteredTransactions'), this.updateState('transactionsFilter'),\n      ),\n    };\n    const contractProps = {\n      accountAddress, accountBalance, contractAddress, contractBalance, network,\n    };\n\n    return (\n      <div className=\"container\">\n        <Alert classType={alertDict.classType} message={alertDict.message} />\n        <ContractInfo {...contractProps} />\n        <h2>\n          <FormattedMessage\n            id=\"container.place-your-bet\"\n            defaultMessage=\"Place your bet\"\n            description=\"Place your bet title\"\n          />\n        </h2>\n        <Route path=\"/\" exact render={() => <RollUnder {...gameProps} />} />\n        <Route path=\"/coin-flip\" render={() => <CoinFlip {...gameProps} />} />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport { IntlContext } from './contexts/IntlContext';\nimport Headers from './components/Headers';\nimport Footers from './components/Footers';\nimport Container from './components/Container';\nimport { messages } from './utils/locales';\n\n\nconst App = () => {\n  const [locale] = React.useContext(IntlContext);\n  return (\n    <Router>\n      <IntlProvider locale={locale} messages={messages[locale]}>\n        <div className=\"App\">\n          <Headers />\n          <Container />\n          <Footers />\n        </div>\n      </IntlProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport setupGA from './utils/analytics';\nimport setupSentry from './utils/sentry';\nimport IntlContextProvider from './contexts/IntlContext';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nsetupGA();\nsetupSentry();\n\nReactDOM.render(\n  <IntlContextProvider>\n    <App />\n  </IntlContextProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}